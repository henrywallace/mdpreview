// Code generated by go-bindata.
// sources:
// static/favicon.ico
// static/github.css
// static/index.html
// static/preview.js
// DO NOT EDIT!

package server

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x31\x68\x1b\x57\x18\xfe\x2c\x47\xaa\x29\xb2\xaa\xc1\x90\x04\x04\xf6\xe0\x80\x3d\xb8\x78\x30\xe1\x54\x42\x12\x4a\x43\xb7\x66\x89\xf7\x0e\x46\xcd\x54\x0c\x1d\xaa\xe1\xb0\x5c\x1a\x4a\x3c\x39\x4b\x0c\x59\x0a\xc9\xa4\x60\x08\x21\x83\x03\x9d\xe2\x96\x0c\xc6\x29\x64\xca\x54\x9c\x66\x71\x17\xd3\x74\xf4\x81\xec\x2b\x4f\xf7\x5d\xf9\x79\xbc\x27\xdd\x49\x8a\x4e\x57\xdf\x07\x3f\xbf\x74\xf7\xfe\xf7\x7d\xef\xdd\x7f\xff\xbd\x7b\x12\x30\x86\x71\x2c\x2e\x2a\x3f\x83\xe6\x25\xe0\x32\x80\x99\x19\x7e\x2f\x03\x07\x97\x80\x72\x39\xf8\x7e\xfb\x1c\xf0\xd3\x65\x60\x0e\xc0\x22\x80\xaf\x11\x1c\x6f\x63\x16\x19\x32\x64\xc8\x90\x21\x83\x8e\x1c\x80\x7c\x4a\x2c\xa7\x69\xaf\x02\xd8\x02\xf0\x4b\x4a\x6c\x8b\x9a\x15\x6e\x02\x38\x00\xe0\xa7\xcc\x0e\xa8\x7d\x5f\x7c\xdf\x04\x70\x77\xc4\x6d\x53\xcc\xb7\xd2\xee\xf1\x73\x2d\x81\x7b\xae\x57\xd4\xa8\x39\xd4\x7e\x02\x60\x39\x69\x51\x31\xb0\x4c\xcd\xfe\xff\x58\xbf\xaa\x51\x45\xcd\xf2\x11\xfa\xee\x35\x0e\x86\xba\xd8\x8f\xfe\x69\xd6\xaa\x7d\x61\x51\xee\x11\x55\xd7\x5e\x6a\x71\x37\x23\xc4\xa9\x71\x7e\x27\xea\x62\xbf\xfa\xe7\x01\x1c\x69\x35\xeb\x6e\x84\xbe\x6f\x88\xfb\xca\x8f\x58\x1b\xf2\xd4\xee\x71\xbc\xf3\x29\xd2\x9f\xe3\x79\xc9\xf5\x92\xd7\xff\x43\xeb\x9f\x36\x5c\xef\xb8\xfa\x97\x0d\x3c\x3e\x73\xd7\x36\x86\x41\xe8\x57\xf9\xda\xe4\xb3\xa4\xda\xa3\xfe\x1b\x5d\x9e\xfd\x4d\xf2\x0c\x5a\x7f\x9e\x9f\x4f\x0c\x73\x15\x55\x7f\x35\xc2\xba\xe5\x84\x6b\x1d\x7d\x0c\xfd\xea\xaf\x19\x34\x6e\x71\x5c\x51\xf4\x57\xc5\xba\xa5\x9b\x79\xe4\x2d\x0e\x48\xbf\x6d\xde\x3c\xd6\x90\x6e\xfa\x8b\xec\x47\xae\x27\xf5\xfe\x3c\xde\xc3\xb2\x4d\x75\x00\xfa\x9b\xec\xd7\x36\x57\x47\xbc\x0e\x9d\xf4\xeb\xef\x19\x39\x8e\x47\xef\x67\xde\xb0\xee\xef\x57\xbf\x67\x88\x3b\xe9\xd2\x26\x4a\xfd\xb7\xe9\xb7\xa1\x57\xfd\xa6\x1a\xb7\x69\x98\x6f\xdd\x46\x51\xff\x01\xdb\x84\x75\x34\x4d\xfa\x8f\xb4\x35\xcd\x74\x97\xfb\x62\x94\xf4\x87\x75\xc6\xf4\x0e\x6d\xab\xe7\xa3\xa2\xdf\xf6\x3c\x91\xfd\x9a\xc6\x9c\x84\x7e\xd3\xfa\xb9\xd9\x65\x5d\x15\xae\x23\xf7\x63\xae\x9f\x6b\x5a\xfb\x4e\x6b\x9f\xa8\xfa\x7b\x7d\x0f\xc9\xf7\x10\x67\x8a\xe9\xf4\x2e\x73\x16\xde\x1f\x47\x19\x52\x7f\xda\xf7\x4f\xd2\xbe\x7f\x95\xf6\xfd\x43\xa4\x78\xff\x56\xd6\xa8\x34\xef\x9f\x67\xc8\x90\x21\x43\x86\x33\x06\xbf\x8d\xfe\xfd\x0b\xd5\xd9\x38\xb0\x8e\xf6\x1f\x8e\xfe\xc3\x35\x75\xba\x65\xf7\x57\xa7\x8f\x1b\x6d\xff\xc9\x71\xe3\x2f\xfa\xdf\xe8\x7f\x50\xbe\x54\x6f\x40\xf9\xa2\xb3\x06\x57\xf9\x0b\x2e\xae\x00\x57\x27\x2e\xd4\xdb\x1e\x68\xfc\xd8\x32\xf8\xb1\xf5\xc0\x8f\xbf\x08\xfc\x47\x7f\xd2\xff\x13\x78\xf2\x74\xd3\x17\x22\x1c\x57\x38\xce\x41\xcd\xdb\x1c\xd0\xfe\x77\xd6\x75\xf9\x3f\xad\xf2\x70\x73\x20\x43\x86\x88\x28\x00\x98\x1c\xb2\x15\xc8\xbd\x04\xe0\x21\x80\xdf\x87\x6c\x0f\xc9\xbd\x07\xe0\x3d\x80\x67\x00\x9e\x0c\xc9\x9e\x91\x73\x8f\xef\x4c\xf7\xb9\x76\x1f\xa6\xdd\x17\xef\x6c\x1b\x09\xe4\xdc\x86\x85\xbf\xc2\xdf\x4a\x94\x2d\x58\x62\x27\x45\x9b\xcf\x44\x2e\xe9\x98\x62\xdb\x38\xfc\x2b\x62\xef\xe3\xb1\xe5\x9d\x6a\x89\xd7\xcf\x63\x2e\x4d\x19\xda\x54\x78\x9d\x37\x2c\xfa\x3a\xf1\xfb\x06\xfe\x82\xf8\x1c\xf2\xab\x36\x6f\x0c\xfc\x53\x8c\x0d\xf7\x42\xbe\x37\x8c\x23\x2a\x3f\x38\x87\x2a\x5f\x6e\x45\xe0\x9f\xd4\x72\xcb\x67\xdb\x95\x1e\xf9\x0b\xd4\x1f\x72\x2d\x74\xe0\x2f\xb0\x2f\xd3\xef\x26\xef\x85\xfe\x38\xfc\xb7\x04\x97\xb2\xe7\xda\x31\xc9\xaf\xf2\x71\x57\xd4\x94\x30\xe6\x2d\x8f\x3d\x66\x5e\x44\xe5\x7f\xc3\x58\x7d\x9f\x7f\x4f\x8c\x51\xf2\xcb\xfa\xfa\x44\xc4\xac\x88\x1a\x5f\x88\xc1\x2f\x6d\xd7\xa0\xc5\x96\x7f\x39\x91\x7f\xbe\xe1\xda\xc7\xe5\xdf\xe5\xbc\xad\x68\xf3\x3a\x0c\xfe\xb7\xcc\x37\x99\x5f\x1f\x9a\xdf\xa3\xe9\x39\x0b\x71\x6f\x7b\x1d\xea\x4f\x4e\xbb\xff\xe3\xf0\xcb\xfa\xbb\x64\xa9\x5d\x95\x08\xf5\x77\x41\xb4\xa9\xc4\xe0\x1f\x16\x24\x7f\x92\xcf\xdf\xa4\xd7\x1f\x49\xaf\xbf\x90\xf0\xfa\x33\x43\x86\xc4\xe0\x5b\xb0\xce\xdd\x96\x6b\xbe\xdf\x0a\xcd\x69\xad\xb9\x4e\xcb\x75\x9d\x3f\xea\x57\x9c\x57\xab\x15\xe7\xce\x6a\xd1\x81\xeb\xb6\x6d\xd1\x75\x9d\x55\xd7\x75\x8e\x5d\x57\xc6\x20\xd8\xe3\x18\xb3\xf1\xcc\x71\x5b\x62\x46\xee\x53\x9c\x4b\x76\x4e\x2c\x98\x00\x70\x1e\xc0\x45\xfa\x28\x16\xb6\x55\xb1\x0f\x00\x3c\x02\xf0\x73\x4c\x7b\xc4\xd8\xe7\xec\xaf\x44\x2b\x0b\xd3\x8f\x95\x84\x5d\x64\xec\x53\x00\x1f\x03\xf8\x06\x40\x9d\x9a\xc0\xf3\xf7\x00\x7c\x29\xc6\xaa\x9e\xa9\x9f\x8a\x71\x3f\x15\xf1\xdb\x00\x5e\x31\x2e\x6c\xf7\x37\xfb\x0c\x63\xdf\xb1\xcd\x6c\x87\xf8\x3b\x6c\x57\x17\xf1\xe7\x79\xbe\xc5\x63\xf7\x78\x4c\x8f\x0f\xcf\xbf\xa3\x6f\x09\x7e\xc5\xf9\x1a\xc0\x0e\x63\x4b\x96\xf8\x6d\x6a\x7d\xad\xc5\x97\xa8\x6f\xdb\x32\xfe\x1a\x75\xcd\x8a\xf1\x3e\x10\xf3\x37\xc1\xbe\x6e\x6b\xf1\x3b\xda\xf5\x2b\x19\xae\x95\xed\xfa\xed\x0c\x20\x7f\xfa\xcd\xdf\x44\x11\xec\x6d\x06\xa6\xd0\x38\x05\xd6\x4e\x81\xaf\x0e\x81\xcf\x7f\x05\xae\x1f\x02\x5f\x1c\x02\xdf\x9e\x06\xe7\xf4\x98\x7f\x03\x00\x00\xff\xff\xdd\xcd\xca\x71\xee\x3a\x00\x00")

func staticFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_staticFaviconIco,
		"static/favicon.ico",
	)
}

func staticFaviconIco() (*asset, error) {
	bytes, err := staticFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/favicon.ico", size: 15086, mode: os.FileMode(420), modTime: time.Unix(1502672816, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticGithubCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x39\x6b\x93\xaa\x4a\x92\x7f\xc5\x9d\x1b\x13\x73\xce\xb5\x6d\x01\x11\x5f\x71\x6f\x6c\x81\xef\x16\x6d\xdb\x27\xce\xce\x46\x14\x50\x40\x29\x50\x08\x28\x3e\x62\xf6\xb7\x6f\x80\x62\xab\x60\xdb\x67\x26\x76\xfd\x60\x40\x55\x66\x56\x56\xbe\x33\xf9\x4f\x8d\xd8\x7e\x4e\x83\x0a\x3a\x9e\x9f\x2c\x6c\xee\xab\x44\xf1\xb1\x42\x6c\x2f\x67\x62\x7b\x55\xf3\x5c\xa5\xba\x71\xcd\x1f\x2a\xf4\x61\x35\x04\xcb\x07\x44\xd3\x6a\x8a\x01\x5d\x0f\xf9\x7f\x6c\x7c\x2d\x57\xae\xc9\xd0\x43\x1c\xfb\xa2\x52\x95\xd6\x87\x0e\x78\x10\xfd\x16\x41\xfc\x24\x34\x87\xe0\xeb\x1f\xdf\x98\x50\x66\x1b\x00\xd0\x82\xd1\xbb\x1e\xfe\x75\xa2\xc7\x89\x3a\x9e\x4e\xc2\xc7\x85\x12\xd1\x8a\xb6\x08\x00\x43\x00\xc6\xb4\xb8\x15\xc3\xf7\x7d\x48\x9f\xef\x86\x3b\x52\x53\x6a\x4c\x0a\x1f\x4b\x79\xd6\x0c\x00\x00\xf5\x08\xa9\x31\x09\x31\x01\xe8\x8e\x8d\xad\xd5\x67\x54\x21\x5c\x1c\xaf\xa2\x93\xa3\x43\x4e\xfc\x2d\x6c\xde\x96\xc3\xc7\x52\x48\x54\xd8\x87\xdb\xc2\x44\xcc\x96\x3b\x86\x2d\xcd\xfb\x21\xbd\xd6\xf8\x1a\x89\x27\xa0\xc3\xa8\x1e\x9a\x49\x00\x80\xa6\x17\xee\xbc\x9f\xae\xae\x34\xd6\x15\x1f\xb6\xa6\xc6\x22\x7c\xf7\x22\xa6\xa9\xf0\xaf\xaf\x1b\x2c\xac\xd0\x24\xdc\x0b\xf9\x8b\x58\xe1\x49\xf8\xbf\x12\x40\xb9\xfe\xd1\x32\x7c\xb5\x1d\xc2\xf7\xca\xe1\x62\x3d\x3a\x2a\x68\x01\x20\x68\x72\xab\xb2\x94\x42\xfe\x3c\x70\x91\x8f\x00\x78\x0c\xc6\xbc\x2f\xcd\x8d\x90\x3f\x61\x1d\xd1\xd3\xcf\x42\x2c\x83\x91\x55\x34\xe4\x59\x78\xff\x71\x78\x08\x3f\x0c\xb7\xcc\xf9\xa6\x54\xf0\x06\x4a\xab\x72\x50\xc3\x45\x1c\xa2\x02\x14\xfe\x89\x8d\xc2\xd0\x19\xf0\x81\x62\x4d\xc3\xc5\x86\x1c\x2e\xb6\xc3\xfb\xf1\x79\xd8\x6c\x39\xab\xc2\x12\x8e\x25\x6e\x07\xcb\x5d\xd0\x12\x67\xf9\x01\xc7\xf0\x75\x4c\xf9\xdd\x9e\x34\xc4\xb6\x32\x6f\xec\x1d\xa9\x83\x5b\xdd\xe5\x48\x6f\xdb\x78\xc8\x6d\xac\xb1\x37\x69\xec\x7b\x56\x91\x9f\x72\xfd\x3a\xff\x5e\x1e\x3b\xbe\xc7\x35\xa9\x6d\x76\x95\xa7\xa0\xcd\xe0\x2c\xf6\xdb\xf5\xa0\xb0\x65\xb2\x95\x6c\x9d\x7f\x1b\x1f\xbc\x6e\xdf\x9e\x75\xfb\x63\xbd\xdd\xd8\xb3\xbc\xde\x2a\x34\xc4\x4e\xa5\x2e\x34\xea\x83\x56\x63\x7e\xa8\x83\xfa\xa4\x68\xf0\x6f\x62\x47\xef\xbf\x2f\xd6\xa4\x5e\x18\x61\x73\x0a\xe7\x0b\xa1\xf1\x51\xc8\x77\x4a\xc0\xdf\x35\xba\x3d\xff\x70\xd8\x2c\xb4\x4e\x76\x3a\x5d\x39\xee\x6e\x6c\xce\x47\xc6\xec\x4d\x2e\x8c\x79\xa4\xb4\x68\xda\x0d\x48\xdf\xb4\x2c\x9b\x7e\x67\x66\x92\xd2\x55\x0e\x66\x81\x41\xfe\xc8\x79\xb3\x0f\x58\x28\x99\xc3\xfd\x0c\xd1\x9e\x35\x7d\xdf\xe7\x7b\x7e\xe9\x4d\xc9\x52\xdb\x99\x94\xd7\x81\xde\xe9\x34\xd6\xa0\x5f\x09\x10\xe5\x04\x6f\x73\x17\x61\x11\x7a\xbb\x2d\x94\xeb\x43\x51\x64\x5d\x3c\xc8\xae\x77\x22\x43\xf4\xa0\xde\x1a\x2c\xc6\xf3\x5d\xb0\xab\xe3\xbd\x32\xec\x28\x44\x6a\xf2\xbd\x65\xf1\xad\xd0\xe8\xc0\x91\xe2\x83\x35\xb3\x1a\x4b\x38\xc8\xee\x2d\x43\x41\xa5\x6d\x20\x56\x96\xa3\xf5\xa0\xdc\xdd\x4f\xd5\xe2\x47\xbb\xa2\xef\xc7\x3e\x93\xed\xe6\xf7\x13\x4b\x32\x3b\x1f\x94\x47\xb1\x36\x97\x2d\x4d\x2d\x9a\x1c\xd0\x61\x82\x7a\x0d\x38\x59\x1a\xb0\x3e\xda\xcc\xdb\xc1\xf4\x43\xdf\xf6\xba\x36\xed\x0f\x4b\x3b\xbc\x99\x6e\xf3\x44\x19\x7f\x34\x59\xc6\xea\xeb\x8b\x16\xaf\x4b\x2d\x39\x58\x0c\x78\x0c\x40\xb3\xd5\xe5\x3b\x22\x00\xf8\x00\x9a\x91\x29\x60\xd0\xea\x80\x83\xbd\x84\x12\xc3\xaf\xa4\x16\x00\x2c\xb6\xcb\x87\x60\x8e\xb3\x33\x26\x2b\x2e\x85\x83\xd8\xa9\x03\x67\x14\x6c\xe7\x07\xa1\x52\x5a\xb0\x1d\xbd\xdc\xcf\xf3\x3b\xa9\xb5\xd0\x15\xdd\x2c\x32\xbc\x30\x1a\xbe\x01\x50\x58\x0a\xd3\xb2\x00\x00\xaf\x81\xd8\x97\x1a\xfc\xe5\x7c\x56\x2b\x6c\x81\x30\x5c\x0c\x01\xdf\x11\x97\x6f\x3a\xb0\x24\xf0\xd6\xd0\xf9\xb9\x0e\x00\xea\x3b\x4b\xa9\x25\x71\xc1\x18\xf3\xfa\x62\xc6\xeb\xcc\xca\x9a\xec\x48\x1d\xb0\xe2\xbb\xd1\x5a\x88\xd2\x81\xc7\x34\x68\xef\xf5\x69\x4f\x1a\x4e\x04\x08\x83\x75\x1d\xb0\xef\x82\xb1\x33\x2c\x23\x5f\x1e\xd4\xeb\x0d\x6f\x0b\x82\xb6\x2e\xbe\x89\x9d\xba\xdd\xea\x51\xbb\x92\xde\x1d\x0a\x20\x10\x41\x57\x65\xc5\x28\x02\xb4\xa3\xfb\xe9\x52\x0b\x02\xb6\x0e\x5a\x1f\xba\x34\x5c\x81\xf6\xbe\x25\x36\xcb\x7d\x5d\x72\x3b\x62\xa1\xdb\x01\xad\xa9\x24\xd5\xc7\x59\xd0\x58\x82\x60\x53\x6f\x3a\xbc\x05\x2a\x6f\x62\xbd\x11\x88\x82\x51\xc1\xf9\x6d\xb9\x5d\xf6\xda\x54\x9e\x55\x87\x0a\x8d\x81\x05\x56\xa0\x07\x27\x6f\x3d\xfd\x44\x7f\x2c\x55\x7a\x75\xaf\xa3\x37\x3a\xb2\xaf\xaf\xdb\x93\x77\xa7\x8e\x0b\xfa\x3b\xe1\xa7\xfb\x8f\xb1\x35\x56\xd5\x81\xb5\x1e\xcf\xc7\x46\x63\xbe\x76\x89\xcc\xe8\x43\xba\xb9\x0c\x9c\xfa\x56\x0b\x04\x5e\xb5\xd4\xb9\x50\x04\xd3\xb7\xe6\xa6\x80\x8a\xa2\xd6\x6f\x76\x99\xca\xdb\x78\x38\x66\xcb\x03\xb9\x92\x37\xd7\x52\x30\x68\x2d\x76\x68\x82\xcc\x3e\x33\x61\x3e\xb8\xac\x02\x5c\xdd\x17\xba\x0e\xdc\xcc\x4a\x93\x21\xbf\xb6\x9b\xab\x89\xb7\x04\x52\x7e\x35\x98\xd0\xca\x7b\xb6\x0e\xf4\xed\x2e\xb0\x69\xc5\x58\xd4\x83\x89\xac\x72\x42\x13\x5b\xad\x79\x70\x08\x9a\x9c\xff\x2e\x37\x3b\xca\xb2\x61\x66\xb7\x5b\x4b\xcc\xcb\x7b\xc0\x96\x11\xe7\xcf\xdc\x37\xe0\x5a\xec\xa2\x6b\x0a\xb2\xea\xb9\xbb\x95\xd7\xa3\x41\x30\xb3\xf3\x7b\x7e\xd4\x7d\x73\x24\x79\x5d\x06\x73\x08\xc7\x72\x39\xba\x2f\x53\x5e\x82\x60\x20\x50\xd4\xc2\xe5\xd1\xb0\x5f\x1f\x0e\x66\x83\x7c\xde\x53\xf9\x50\xcc\x1f\x58\x9a\x49\xa0\xd1\xe8\x35\x02\x71\xdc\x60\x37\x07\x52\x5c\x1c\x48\x51\x66\xf8\x9d\x6a\x37\x07\x0a\xe8\xed\xfa\x4b\xc0\xc9\x0c\xbf\x1f\x7b\x81\x50\x5e\x4a\x81\x4e\x4d\xcd\xfe\x86\x08\xe3\x19\x10\xd7\xfd\x83\x78\xf0\xc8\x1b\xed\x36\x8c\xfe\x9a\xdf\x37\xf6\xc8\xd5\x8b\xef\x62\xd7\x94\x36\xd3\x0d\x6a\x8c\xdf\x14\x35\x5f\xae\x6c\x78\xc7\x76\xb6\x9d\xc6\x94\x58\xa8\xdd\x23\xa2\x07\x00\xa2\x3b\x2a\x1b\xe7\x13\x96\x21\xb3\xe1\x98\x2a\x09\x43\x7e\xdc\xda\x52\x5d\xde\x80\xfa\xaa\xd4\x1e\x1e\xde\x76\x0a\x64\xbc\xae\xd0\xa0\x8d\xba\xcf\x0e\x9b\xd9\x4a\x77\x30\xa2\x6c\x19\x42\xa9\x2e\x0c\xb5\x40\xe8\x96\xc0\xa6\x00\xda\xcb\x6c\x6f\x40\x17\x9a\xa2\x65\x71\x8a\x59\x2a\x95\x8b\xdb\x2d\xb2\xa9\x15\xbf\x6c\x0b\xbc\xa1\x39\xd2\xa6\x0f\x8b\xef\x06\xad\x50\x88\x99\x6f\x0a\xcb\xc6\x76\xd6\x2a\x4d\xd4\xf7\x7a\x6f\xc1\xf6\x2b\x8c\x3d\xb0\xb2\x0d\x7e\xbe\x01\x72\xdb\xea\x88\xa3\x0f\xd1\xcb\xb2\x70\xd2\x50\xd9\xbe\x5a\x10\xda\xf5\x72\x5f\xdd\x0e\x7a\x63\x0f\x30\xad\x5e\x59\xac\xbc\x0f\xea\xb2\xd2\xcb\x1a\xf5\x92\x40\xef\x08\x6c\xa3\x5e\x77\xd4\x80\x84\x6a\x36\x66\x34\xab\xac\x76\x42\x76\x3c\x29\x8f\x77\x5b\x4f\xe2\xe6\x14\xea\xbd\x5b\x1f\x86\xbb\x67\x66\x53\x4c\x7a\xce\xca\x95\x9d\x32\xdb\xeb\x0d\xdf\x5b\x9d\x92\xc2\x79\x03\x3c\x39\x38\xb3\xce\x6c\x54\x6c\x1d\xcc\x91\x3e\x39\x1c\x7a\xfc\x08\xaf\x06\xef\xcd\xf1\x60\xbe\x36\xf7\x25\x77\xbd\xa3\x16\xf4\xb0\xc8\x83\x0e\x59\xf0\xa3\x26\x36\x86\xd2\x70\x30\xe0\x1b\xea\x4a\x18\xe8\xf3\xf1\xa0\x0d\xa8\x52\x1b\xb4\x96\xad\x19\xee\x2c\xe1\xfb\xa2\x3f\xa3\x0b\xf9\xac\x69\x71\xa3\x4a\x73\x5c\x72\x7b\xed\x66\x97\xd3\x86\xf2\x0a\x8c\x07\x2d\x7a\xc9\x0c\x9a\xe2\x46\x79\xeb\x76\xbd\x5d\x67\xaa\x0d\x07\x1f\x66\xb6\xd2\xdd\xab\x90\x1b\x99\xb4\x3a\x91\x8c\x91\x60\xd1\xea\x5e\x30\x35\x82\xea\x5b\xc4\xae\x45\x49\xed\x35\x64\x6d\xdd\xd6\x0a\x83\x3c\x50\xeb\x1b\xcb\x5b\x46\xfa\xb2\xfa\xba\x44\x00\x58\x0c\xa5\x25\x6f\xed\x41\x4b\x1a\x2e\x2c\xd5\xe8\x95\x0f\x3d\xb5\xde\xd8\xab\xe0\x43\x23\x60\xdd\x39\x67\x5f\x11\xf0\x01\x78\x03\xbc\x08\xf8\x7c\x3e\x1f\xe6\x39\x90\x2c\x31\xce\xd5\xc7\x1f\x7f\xfc\xcc\x68\xc4\xb5\xa0\xff\xe3\x6f\x61\xed\xf2\xb7\x9f\xff\x7c\xb5\xa0\xbb\x52\x49\x60\xe7\x64\xa2\xee\x8f\x39\xcb\xcb\xf9\x68\xe7\xe7\x3c\x7c\x40\x39\xa8\x2e\x37\x9e\x5f\xa5\x29\xea\xaf\xb5\x5c\x80\xe4\x15\xf6\x1f\xec\x9a\xd8\x46\x39\x03\x61\xdd\xf0\xab\xf4\x6b\xb1\xa6\x10\x93\xb8\xd5\xdf\x18\x96\xa9\x30\xa8\x76\x5d\x53\xe5\xa0\xe3\x98\x28\xe7\xed\x3d\x1f\x59\x2f\x7c\x58\x59\x89\x50\x19\x45\xaf\x4d\x62\xfb\x2f\x1e\xd2\x09\xca\x6c\xf0\x4b\x1b\x99\x5b\xe4\x63\x05\xbe\x00\x17\x43\xf3\xc5\x83\xb6\x97\xf3\x90\x8b\xb5\x97\x88\x46\x26\x3a\x24\x83\x2c\xb2\xc4\x17\xac\xfb\x57\x6f\x6f\xc9\xc4\x3c\x71\x10\x72\x5d\xa5\x39\x67\x97\x60\x37\x20\xae\x9a\x0b\x5c\xe8\x54\x65\x17\xc1\x55\x2e\x7c\xbf\x13\x4d\xe6\xd5\x31\x73\xca\xf1\x7c\x31\x0e\x96\x0a\xa5\x74\x10\xfa\x25\x65\xd5\x8b\xfe\xb7\x31\x3a\x45\x15\x15\xa5\x98\x86\x8e\xd2\xb0\x91\x7d\x39\x57\x63\x19\x85\x4e\x43\xf4\x2c\xfc\xf8\x60\x8f\x3e\xde\x68\x24\xf5\x64\xdb\xbf\x00\x31\x65\xae\x00\xd3\x80\x56\x31\x88\x5a\x2a\x40\xb6\x92\xca\x48\x1a\x1b\x8e\x9a\xba\x7c\xe2\xce\xf1\xd0\x99\xcb\x54\x18\x37\x7d\xf5\x24\x6d\x25\x55\x60\xe7\x5d\xcf\xfd\x7a\x17\x5e\xf4\x51\x60\x34\x8e\x49\xbb\xcd\x36\x95\x80\x15\xc4\x98\xa8\xc0\x31\x54\xaa\x1c\xe4\x4d\x0c\x23\x17\x68\x95\x29\xa7\xc1\x60\x1c\xc3\x68\x50\x93\x35\xa5\x26\x43\x65\xa5\xbb\x64\x63\xab\xb9\xa7\xc8\x0a\xf3\x14\xf9\xb1\x96\x14\xa6\x5a\x95\x91\x46\x5c\x74\x54\x88\xed\x23\xdb\xaf\xfe\xe5\xbf\xc5\xbf\xa4\x2a\xf4\x22\xea\x53\x73\x14\x9c\xfc\xa6\x44\x51\xb5\xa7\xf6\x62\x99\x31\x8f\xa5\x42\x51\xa1\xb4\x54\x18\x23\x4d\xc6\x96\x71\xb6\xca\xd4\x4d\xef\x11\x2b\x8f\x3d\xcb\xc2\x27\x1c\xcf\xdf\x9b\xa8\x8a\x7d\x68\x62\xa5\xf6\xd4\x2b\x2c\xf9\xe1\xa5\x1f\xe3\xa8\xb7\x9a\x4f\x51\x8c\xa6\x21\xa4\x51\xe9\x6c\xd2\xb7\x6e\x98\x86\x4d\x69\x9a\xc6\xa6\x62\x2b\xb7\x86\x99\x7e\xb4\xac\xa6\x2b\x0b\x7f\x5a\x14\xa7\x95\xb5\xb4\xa3\xbf\x90\xaf\xea\x3e\x12\xd5\xe3\xa8\x25\x5f\x5c\xb0\x58\xe6\x28\x2e\x3d\xa0\xe8\x31\x4c\xa5\x58\x51\x61\xea\xe1\x0a\x71\xcd\x63\x94\x9a\x54\xa4\x10\x17\xfa\x98\xd8\xd5\x8d\xad\x22\x37\x0c\xf5\xb5\xaf\xdd\xfc\xdc\xe6\x1f\x55\xec\x39\x26\xdc\x57\xb1\x1d\xe5\x07\xd9\x24\xca\xaa\xb6\x45\x6e\x98\x83\xcc\x1c\x34\xb1\x6e\x57\xa3\x33\x7c\xe2\xd4\x34\x6c\x9a\x55\x65\xe3\xba\xc8\xf6\x85\x90\xfc\x3d\x59\x78\x4c\x48\xcf\x77\xa1\xed\x39\x30\x44\xb9\xcd\xa7\x9f\x4c\xe7\xbc\x15\x76\xaa\x44\x5e\x22\xc5\xf7\x12\x24\xab\x50\xf1\xf1\x36\x11\xd4\x60\xd5\x20\x5b\xe4\x1e\xc9\xc6\x8f\x38\x0f\xb0\xea\x1b\xd5\x84\x79\x79\xbe\x4b\x6c\xfd\x46\x49\xd8\x36\x90\x8b\xfd\x6f\x40\xca\xc4\x54\x51\xe2\x92\x06\x7d\xfc\x4c\xad\x0c\xb2\x6a\x16\x74\x75\x6c\x57\x5f\xb9\x12\xb2\x32\x09\x0e\xb0\xa5\x1f\x65\xe2\xaa\xc8\x3d\xbb\xa1\x4d\xec\x84\x0b\x79\x5b\xbd\x6a\x13\xff\x47\xd5\x25\xc4\xff\x79\x0c\x6f\xa6\x99\x24\xa8\x1a\x58\x55\x91\x7d\x0f\xad\x10\x35\x21\x8f\x95\xac\xde\x2f\x39\xee\xed\x68\xc7\x22\x36\xf1\x1c\xa8\xa0\x97\xcb\xd3\x75\x91\x80\xac\xc4\x4d\xdd\xa3\x4c\x76\xe1\x36\xb6\xf5\xea\x39\x66\xe6\x64\xb2\xab\x9d\xeb\x08\xaa\x76\xe1\x74\x8b\x3d\x2c\x9b\x89\x8b\x61\xdb\xd9\xf8\x11\x17\xb1\xdc\x63\x71\x25\x05\x15\x81\x3e\x23\xf8\x77\x7f\xef\xa0\x3f\x14\x03\x29\x2b\x99\xec\xfe\x71\xcd\xe0\x59\xca\x21\x7f\x0e\x54\xd5\x70\x29\x71\xc8\xef\xe9\x08\x8f\xd9\x8e\x85\x17\x73\xff\x29\xb0\x78\xe5\xba\xb0\x7a\x60\x5b\x57\x49\x97\xe3\x54\xae\x76\xef\xb5\x69\x26\x11\x1b\xf8\x43\x0f\xff\x86\x01\x73\x54\x42\x00\x86\x7b\xbc\x28\xef\xac\x09\xba\xe8\xec\x32\x57\xaa\x3c\x19\xdd\x55\x20\xbc\x71\xe2\x93\xd0\xaa\x54\xed\x22\x3d\xdf\x27\x56\x95\x76\x76\x19\x8f\x98\x58\xcd\xfc\xa6\x6a\x88\x41\x89\x90\x65\xb8\x97\xec\x1b\x07\x1d\x1f\xca\x66\x18\xa8\xce\xb9\x38\x91\x89\x43\x14\xa8\xf9\xc8\xbd\xc7\x30\x11\x74\xab\x32\xf1\x8d\x2f\x90\x23\xd0\x8b\xe7\x39\x50\x89\xec\x21\xe6\x5a\x21\xa6\x09\x1d\x0f\x55\xe3\x87\x04\x7a\xc2\x9d\x7c\xe3\xf8\xd0\xac\x8c\x44\x19\x67\x30\x89\x95\x42\x62\x85\x4d\xac\x14\x13\x2b\xdc\xf1\xa4\xa6\x30\x02\x5f\x74\x16\x4b\x3d\x85\x91\xab\xe0\x54\x60\x9c\x5d\xed\x99\x3d\x30\xd7\xd1\x8c\xfd\x06\x42\xe1\x1a\x81\xfa\x06\x02\x7b\xbc\x6b\x45\x9e\x21\x14\xaf\x11\xbe\xc3\x12\x77\x8d\xf0\x8d\x4b\x3b\x5f\xc9\x94\xa6\x9c\x44\x3c\x88\xf2\xe2\x7a\x43\x7c\x74\x7c\x14\xbe\x36\xe6\xbd\xea\x88\x19\x1b\x4c\xce\x44\xda\xa7\xc3\x7d\x4f\x93\xc4\xcc\x90\x04\xc9\x4d\xb8\x78\x34\xb1\x77\xae\xe9\x72\x61\x34\xac\x9a\x24\x40\x6e\xce\x25\x16\x4c\xa4\x8a\x8d\x79\xc2\x49\x25\x94\xb2\x4e\x1e\xc0\x93\x33\xfc\x83\xb3\xa1\xe9\x18\x89\xfa\x4a\x55\x63\x31\x9f\xae\x9f\x96\xc6\x6e\x62\xac\xa7\x85\x89\x29\xe7\x22\x7d\x63\x42\xf7\x45\x20\xb6\x47\x4c\xe8\xbd\x98\x58\x46\xa7\xe8\x97\x09\x01\x5e\x44\x64\x9b\xe4\x45\x20\x1b\x17\x23\x37\x3d\x99\x31\x49\x1d\x86\xe9\xf0\x2b\x05\x44\xe8\x11\x66\xe6\xdf\x64\xe4\x61\xb5\x95\x56\x58\x9d\x8e\x4f\x2b\xf0\xa8\x3b\xf3\xf9\x0f\x6c\x39\xc4\xf5\xa1\x9d\xc8\x2f\x21\x34\x7d\x0b\xcd\x3a\xbb\xaf\xe1\x99\x5b\xf8\xf2\x33\xf8\xc2\x2d\x7c\xe8\xc8\x5f\x23\xb0\xb7\x08\xcc\x53\x8e\x8a\xb7\x08\x61\xf4\xfa\x1a\x81\xbb\xbb\x32\xf5\x05\xc2\xaf\x26\x9f\x7f\x3d\xf3\xfc\xf9\x7b\x55\xc3\xae\xe7\xe7\x14\x03\x9b\xea\x8d\xc9\x3d\xe4\xee\xcf\xdf\xab\x26\xbc\x47\x89\x0d\xf3\xb1\x10\x60\x54\x34\xfe\xdd\x70\x91\xf6\x8f\x9f\xe7\x1a\x23\x2e\x4b\xbe\x53\x63\xbc\x42\x5b\x31\x88\x7b\xd4\x4c\x02\xfd\x6a\x28\xc4\xb8\x72\xca\xb9\x51\xec\x0c\x83\xef\xb5\x0f\xe7\xa2\x80\x7f\x33\x4a\x7a\x40\xb3\xaa\x11\x65\xe3\xc5\xe5\x79\xd2\xf9\x9d\xfb\x08\xf3\x19\x62\x93\xb1\x2a\x19\x8d\xee\x57\xd4\xc4\x4a\xa4\xb0\xb4\x92\xf8\xab\xd0\xcf\x25\xc3\xc6\x67\xc1\xf4\xca\x14\x91\xf5\x59\x5a\xc6\xe5\x53\x68\xd8\x19\x2a\xa5\x6f\x44\x34\x62\x51\xf9\x52\x30\x7d\x91\x53\x2e\x34\x33\x34\xb2\x6a\x37\xf3\xb6\xb8\x60\x89\xc4\x1f\x71\xf0\x75\x99\xf5\x49\xf5\xcf\x87\x66\xf8\x15\xce\x63\x33\xbc\xc7\x5a\xc9\x6a\x7a\xfb\x18\xdf\xa6\xe0\xec\x32\xc5\x38\x19\x9f\xc2\x32\x7d\x6f\x3d\xa1\x39\x9d\xef\xcb\xb2\xac\x5a\xe4\xee\x9b\x4f\x0b\xab\xaa\x89\xd2\x7a\xfa\xf3\x00\xe8\x24\xdd\x93\x4c\xc2\x22\xf4\x37\x85\x53\x64\x95\xbe\x2d\x4f\x73\x37\xdd\x74\xbc\xe7\x42\x15\x6f\xbc\x90\xcf\x5a\xd4\x15\x18\x50\x25\x41\x15\xdb\x1e\xf2\x33\x54\x26\x17\x52\xa3\x32\x0f\x3a\xf0\xff\xaf\x8a\x8f\xb9\x72\xc1\x2b\x2b\xbd\xaf\x70\xee\xc6\xbb\x4c\x0a\xbf\x97\x34\x14\x7d\xda\x4f\x72\xff\x64\xbf\xf0\x64\x9f\x7d\xb2\x5f\x7c\xb2\xcf\xdd\xee\xc7\x1d\x13\x2d\xd3\x1a\x53\x78\x60\x15\x51\x8f\x88\x4d\xec\xef\x1f\x74\xca\x06\x7d\xea\xa2\xe2\xa8\x94\xbc\xf5\x93\xfd\xc2\x93\x7d\xf6\xc9\x7e\xf1\xc9\x3e\x77\xbb\x9f\xe8\xf6\xd2\xa2\xf6\xfd\xa5\x9e\x29\xf6\x97\xa0\x0b\xbf\x04\xcd\xfe\x12\x74\xf1\x97\xa0\xb9\xaf\xa0\x8f\x57\xaa\x7f\x30\x29\x30\x3e\x2b\xa2\xb3\xe3\xbc\x16\x90\x55\xbb\x9d\xdd\x3c\x6c\x62\x11\x44\x0a\x4a\xcc\x6e\x0d\xe6\x09\x4d\xfa\xb5\xf8\x2f\x50\xbd\x6e\xa9\xe8\x28\xc8\x7f\xdd\x44\xa5\xec\x5f\xf7\x4c\xaf\xe5\x52\x1a\x09\xee\x06\xa4\x78\x9f\x69\x7e\xbd\xa1\x61\x92\x87\x44\xfd\x46\x6a\xb3\x91\xda\x51\xa4\xb6\x1f\xbf\xd4\xf0\x9a\xf8\xcf\x9b\x6e\x2e\x2d\x85\x9b\x38\x6b\xe2\x6b\xa0\x54\x11\xab\xe6\xe3\xfe\x5e\x35\x33\xaa\x7f\xbc\x4f\xfd\x97\x03\x6f\xc7\x68\xb5\xe4\xcc\xfd\x49\x3f\x1a\x92\x57\xaf\xab\x00\x2e\x35\xe8\xa7\x8f\x38\xe2\x1c\x7c\x4a\xbe\xa7\x39\x68\xf4\x81\xf2\x32\xd0\x81\x1b\x9f\xa4\xe2\x66\x7c\xe3\xd9\xbc\x28\x86\x4b\x2d\xaf\x32\xfe\x27\xd7\x9c\xb3\xcb\xd0\xa7\x54\x1a\x65\xe4\xa7\x03\xa1\x33\x05\x37\x39\x33\xfe\x4d\xd3\xb4\xd8\x87\x22\x11\x7f\x92\x3a\x25\xf7\x47\xa4\xaa\xb6\x6f\x9c\x8a\x97\x1f\x8c\xfd\x33\x8d\x70\x34\xe3\x4f\x1b\xd1\x5a\x70\x97\xbb\x92\xdd\x83\xb9\x67\x2a\xab\xa9\x7d\xed\xa7\xad\xc4\x2e\x73\x32\xbc\xcf\x0a\xf2\x12\x41\xae\x66\xc8\xd4\x95\x25\x95\x8b\x7f\x4d\x9e\xe7\xea\x32\xfc\xc1\x94\x5e\x0a\xf4\x4b\xa1\xf8\xf2\x4a\x15\x7f\x26\x8b\x99\x34\x7e\xe2\xf6\xe7\x5e\x8d\xa7\xbd\x53\xab\x63\x22\xdf\xbf\x9a\x95\xe5\x22\xc6\x2e\x6d\xce\x7f\x51\x14\xa4\x12\x53\xb6\xb0\xa0\xfe\xfc\x92\x6c\x13\xd7\x82\x66\x0a\xcc\x9f\x77\x32\x49\xb9\x6e\x24\xf6\x88\x54\xf4\x3d\xfa\x4c\xab\x16\x18\xd8\x47\x11\x4f\xa8\xea\xb8\xe8\xd9\x54\x32\xd1\x8d\x18\x58\x37\xcc\xd0\xb8\x8f\xcf\xfd\xe9\x13\xf8\xba\x51\xb8\xcc\x07\x12\xcc\x7d\x8d\x9f\xd6\x7b\xc4\x12\x88\x1c\xfc\xc6\x3f\xef\x14\x7f\x5b\xce\xb1\xc5\x34\xcb\x3b\x7f\xaf\x7a\xa6\x7e\xc7\x45\x27\x93\xbc\x2d\xd6\x6b\x9f\x16\x1f\x9d\x9f\xa2\x9c\xfb\x59\x7c\xda\xa8\xbb\x76\xaf\xfd\x24\xa7\xdf\xd1\x53\xcc\xe4\x23\x3b\xfd\xdc\x3f\xd9\x6a\x6c\x96\x0f\x14\xa1\x6d\x4c\x33\xa7\x10\xcb\xc2\x7e\xe6\x55\xf6\xed\x5c\xdc\x87\x46\x1f\x59\x54\xec\x85\x01\x43\xfd\x79\x1e\xb1\xdf\x7c\xe7\xbb\x9a\x10\x3f\xfe\xf8\xf7\x4b\xbd\x4f\xd4\xf6\xfc\xbb\x33\xa5\xff\xf3\xb6\x49\xa5\xd5\xa2\x0a\xd3\xdb\xa6\xdb\x96\xea\x7b\x6d\x53\x7a\xa4\xae\x46\x5f\x6e\x90\x9a\x7d\x0d\xa9\x90\x9c\x09\x65\x64\x1e\x1d\xe2\xe1\xa8\xdc\x75\x91\x09\x7d\xbc\x45\xb5\x43\x0e\xdb\x2a\xda\x55\xe9\x7b\x75\x44\x1f\x50\x12\xfa\x76\x91\x43\x72\x0a\xb1\x35\xac\xe7\x88\x73\xae\x9c\xfd\x1f\xf1\x69\x3f\xff\xe7\xd5\xc7\x16\xca\xb9\xc8\x82\xd8\xc6\xb6\x7e\x51\x5e\xea\x54\xc4\x87\xde\x2a\x17\x0d\x3a\xb1\x8f\xac\xc4\xc8\xf3\x1b\x38\xd9\x7b\x1a\x57\x05\x43\x8a\x8b\xde\x41\x9f\x3f\x3f\xc5\x7e\x98\x09\x03\x71\xe6\xd4\xfb\xe7\xe8\x57\x0e\x59\xe9\xda\x4e\xfd\x7c\x97\xa2\x4d\x84\xd0\x3f\xff\x37\x00\x00\xff\xff\x18\xb6\x12\x7b\xfe\x2d\x00\x00")

func staticGithubCssBytes() ([]byte, error) {
	return bindataRead(
		_staticGithubCss,
		"static/github.css",
	)
}

func staticGithubCss() (*asset, error) {
	bytes, err := staticGithubCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/github.css", size: 11774, mode: os.FileMode(420), modTime: time.Unix(1503264226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\x4d\x6f\xd4\x30\x10\xbd\xe7\x57\x0c\x73\x02\x89\x24\xdb\x8a\x52\x58\xec\x80\x04\x9c\xe1\xc0\x85\xa3\x63\x4f\x37\x43\x1d\x3b\xb2\xa7\xfb\xc1\x6a\xff\x3b\xca\x47\xcb\x2e\xa8\xb9\x58\x33\x6f\xde\x7b\xf3\x11\xf5\xe2\xcb\xb7\xcf\x3f\x7e\x7e\xff\x0a\x9d\xf4\xbe\x29\xd4\xf8\x80\x37\x61\xa3\x91\x02\x36\x45\xa1\x3a\x32\xae\x29\x00\x00\x54\x4f\x62\x20\x98\x9e\x34\x6e\x99\x76\x43\x4c\x82\x60\x63\x10\x0a\xa2\x71\xc7\x4e\x3a\xed\x68\xcb\x96\xca\x29\x78\x0d\x1c\x58\xd8\xf8\x32\x5b\xe3\x49\x5f\xe1\x22\x24\x2c\x9e\x9a\xe3\x11\xaa\xc1\x48\x07\xa7\x93\xaa\xe7\xd4\x0c\x7b\x0e\xf7\x90\xc8\x6b\x64\x1b\x03\x42\x97\xe8\x4e\x63\x7d\x67\xb6\x63\x5c\xb1\x8d\x1f\xb7\xfa\x1a\xa1\xfe\xaf\x3e\xcb\xc1\x53\xee\x88\xe4\x89\xb5\x61\xe9\x1e\xda\xca\xe6\x3c\x11\x54\x3d\x0f\x54\xa8\xa9\x76\x56\xa8\x7a\x93\xee\x5d\xdc\x85\xb2\x8d\xee\x00\xc7\x29\x39\x7e\x6d\xdc\x97\x99\x7f\x73\xd8\xac\xa1\x8d\xc9\x51\x2a\xdb\xb8\xff\xf0\x84\xf7\x1c\xe6\x51\xd7\x70\xbd\x5a\x0d\xe7\x88\xd9\x3f\x22\xef\xdf\xfd\x83\xa4\x0d\x87\x35\xac\xc0\x3c\x48\xfc\x9b\x1f\x8c\x73\x93\xd1\x9b\x9b\xc7\xf2\x53\x31\x3d\x9f\x7a\x72\x6c\xe0\xe5\x99\xe6\xed\xdb\xdb\x61\xff\xea\xac\xd3\x67\x47\xb8\x90\xbe\xba\x39\xef\xe4\xb4\x98\xa8\x7a\xd9\x45\xa1\x46\xf2\xb2\x55\x93\x84\xad\x27\x60\xa7\x71\x48\x34\x5e\x1c\xc1\x7a\x93\xb3\xc6\x0b\x33\x04\x39\x0c\xa4\xa7\x3f\x48\xd5\x0b\x6d\x11\xc9\x36\xf1\x20\x90\x93\xd5\x58\x2f\x2a\xd5\xaf\x8c\x8d\xaa\x67\x68\xbc\xc8\x6c\x3a\x9e\x66\x94\xf8\x13\x00\x00\xff\xff\x60\x02\x6c\xd3\x94\x02\x00\x00")

func staticIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticIndexHtml,
		"static/index.html",
	)
}

func staticIndexHtml() (*asset, error) {
	bytes, err := staticIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/index.html", size: 660, mode: os.FileMode(420), modTime: time.Unix(1503156831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticPreviewJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x41\x4b\x33\x31\x10\x86\xef\xfd\x15\x2f\xbd\xec\x2e\x85\xf4\xfe\x95\x5c\x3e\x11\x14\xf4\xa4\xe0\x39\x26\x63\xbb\x98\x9d\x29\xc9\xec\x46\x91\xfe\x77\xc9\xba\xb5\x1e\x3c\x98\x53\x48\x9e\xf7\x99\x79\xdb\x97\x91\xbd\xf6\xc2\x68\x3b\x7c\xac\x00\x60\x72\x09\x63\x8a\xb0\x68\x4a\xfe\xb7\xdd\x36\xd8\xa0\xf4\x1c\xa4\x98\x28\xde\x55\xd8\x1c\x24\xeb\x2f\xcf\x47\xa7\x07\x76\x03\x61\x53\xb3\xcd\xee\xdb\x77\x4c\x34\xf5\x54\x60\x11\xc4\x8f\x03\xb1\x9a\x3d\xe9\x75\xa4\x7a\xfd\xff\x7e\x1b\xda\xf5\x82\xac\xbb\x4b\xca\x0b\x33\x2c\x98\x0a\x9e\xe8\xf9\x41\xfc\x2b\x69\x3b\xa6\xd8\xed\x56\x33\x53\xff\x8d\xb0\x8f\x92\x09\x16\x97\x2a\x34\x11\xeb\xb9\x4f\x3d\x8b\xdc\x28\xbd\xe9\x95\xb0\x12\x6b\xed\x57\x05\xf4\x95\x99\x25\x61\x59\xf9\xf4\x53\x3f\x50\xce\x6e\xff\xc7\x01\x3d\x33\xa5\x9b\xc7\xfb\x3b\x58\xcc\x90\x09\x4e\xdd\xd9\x7a\xea\xda\xee\x33\x00\x00\xff\xff\xe4\x18\x5f\x51\x72\x01\x00\x00")

func staticPreviewJsBytes() ([]byte, error) {
	return bindataRead(
		_staticPreviewJs,
		"static/preview.js",
	)
}

func staticPreviewJs() (*asset, error) {
	bytes, err := staticPreviewJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/preview.js", size: 370, mode: os.FileMode(420), modTime: time.Unix(1502658362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/favicon.ico": staticFaviconIco,
	"static/github.css":  staticGithubCss,
	"static/index.html":  staticIndexHtml,
	"static/preview.js":  staticPreviewJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"favicon.ico": &bintree{staticFaviconIco, map[string]*bintree{}},
		"github.css":  &bintree{staticGithubCss, map[string]*bintree{}},
		"index.html":  &bintree{staticIndexHtml, map[string]*bintree{}},
		"preview.js":  &bintree{staticPreviewJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
