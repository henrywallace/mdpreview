// Code generated by go-bindata.
// sources:
// static/favicon.ico
// static/github.css
// static/index.html
// static/preview.js
// DO NOT EDIT!

package server

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x31\x68\x1b\x57\x18\xfe\x2c\x47\xaa\x29\xb2\xaa\xc1\x90\x04\x04\xf6\xe0\x80\x3d\xb8\x78\x30\xe1\x54\x42\x12\x4a\x43\xb7\x66\x89\xf7\x0e\x46\xcd\x54\x0c\x1d\xaa\xe1\xb0\x5c\x1a\x4a\x3c\x39\x4b\x0c\x59\x0a\xc9\xa4\x60\x08\x21\x83\x03\x9d\xe2\x96\x0c\xc6\x29\x64\xca\x54\x9c\x66\x71\x17\xd3\x74\xf4\x81\xec\x2b\x4f\xf7\x5d\xf9\x79\xbc\x27\xdd\x49\x8a\x4e\x57\xdf\x07\x3f\xbf\x74\xf7\xfe\xf7\x7d\xef\xdd\x7f\xff\xbd\x7b\x12\x30\x86\x71\x2c\x2e\x2a\x3f\x83\xe6\x25\xe0\x32\x80\x99\x19\x7e\x2f\x03\x07\x97\x80\x72\x39\xf8\x7e\xfb\x1c\xf0\xd3\x65\x60\x0e\xc0\x22\x80\xaf\x11\x1c\x6f\x63\x16\x19\x32\x64\xc8\x90\x21\x83\x8e\x1c\x80\x7c\x4a\x2c\xa7\x69\xaf\x02\xd8\x02\xf0\x4b\x4a\x6c\x8b\x9a\x15\x6e\x02\x38\x00\xe0\xa7\xcc\x0e\xa8\x7d\x5f\x7c\xdf\x04\x70\x77\xc4\x6d\x53\xcc\xb7\xd2\xee\xf1\x73\x2d\x81\x7b\xae\x57\xd4\xa8\x39\xd4\x7e\x02\x60\x39\x69\x51\x31\xb0\x4c\xcd\xfe\xff\x58\xbf\xaa\x51\x45\xcd\xf2\x11\xfa\xee\x35\x0e\x86\xba\xd8\x8f\xfe\x69\xd6\xaa\x7d\x61\x51\xee\x11\x55\xd7\x5e\x6a\x71\x37\x23\xc4\xa9\x71\x7e\x27\xea\x62\xbf\xfa\xe7\x01\x1c\x69\x35\xeb\x6e\x84\xbe\x6f\x88\xfb\xca\x8f\x58\x1b\xf2\xd4\xee\x71\xbc\xf3\x29\xd2\x9f\xe3\x79\xc9\xf5\x92\xd7\xff\x43\xeb\x9f\x36\x5c\xef\xb8\xfa\x97\x0d\x3c\x3e\x73\xd7\x36\x86\x41\xe8\x57\xf9\xda\xe4\xb3\xa4\xda\xa3\xfe\x1b\x5d\x9e\xfd\x4d\xf2\x0c\x5a\x7f\x9e\x9f\x4f\x0c\x73\x15\x55\x7f\x35\xc2\xba\xe5\x84\x6b\x1d\x7d\x0c\xfd\xea\xaf\x19\x34\x6e\x71\x5c\x51\xf4\x57\xc5\xba\xa5\x9b\x79\xe4\x2d\x0e\x48\xbf\x6d\xde\x3c\xd6\x90\x6e\xfa\x8b\xec\x47\xae\x27\xf5\xfe\x3c\xde\xc3\xb2\x4d\x75\x00\xfa\x9b\xec\xd7\x36\x57\x47\xbc\x0e\x9d\xf4\xeb\xef\x19\x39\x8e\x47\xef\x67\xde\xb0\xee\xef\x57\xbf\x67\x88\x3b\xe9\xd2\x26\x4a\xfd\xb7\xe9\xb7\xa1\x57\xfd\xa6\x1a\xb7\x69\x98\x6f\xdd\x46\x51\xff\x01\xdb\x84\x75\x34\x4d\xfa\x8f\xb4\x35\xcd\x74\x97\xfb\x62\x94\xf4\x87\x75\xc6\xf4\x0e\x6d\xab\xe7\xa3\xa2\xdf\xf6\x3c\x91\xfd\x9a\xc6\x9c\x84\x7e\xd3\xfa\xb9\xd9\x65\x5d\x15\xae\x23\xf7\x63\xae\x9f\x6b\x5a\xfb\x4e\x6b\x9f\xa8\xfa\x7b\x7d\x0f\xc9\xf7\x10\x67\x8a\xe9\xf4\x2e\x73\x16\xde\x1f\x47\x19\x52\x7f\xda\xf7\x4f\xd2\xbe\x7f\x95\xf6\xfd\x43\xa4\x78\xff\x56\xd6\xa8\x34\xef\x9f\x67\xc8\x90\x21\x43\x86\x33\x06\xbf\x8d\xfe\xfd\x0b\xd5\xd9\x38\xb0\x8e\xf6\x1f\x8e\xfe\xc3\x35\x75\xba\x65\xf7\x57\xa7\x8f\x1b\x6d\xff\xc9\x71\xe3\x2f\xfa\xdf\xe8\x7f\x50\xbe\x54\x6f\x40\xf9\xa2\xb3\x06\x57\xf9\x0b\x2e\xae\x00\x57\x27\x2e\xd4\xdb\x1e\x68\xfc\xd8\x32\xf8\xb1\xf5\xc0\x8f\xbf\x08\xfc\x47\x7f\xd2\xff\x13\x78\xf2\x74\xd3\x17\x22\x1c\x57\x38\xce\x41\xcd\xdb\x1c\xd0\xfe\x77\xd6\x75\xf9\x3f\xad\xf2\x70\x73\x20\x43\x86\x88\x28\x00\x98\x1c\xb2\x15\xc8\xbd\x04\xe0\x21\x80\xdf\x87\x6c\x0f\xc9\xbd\x07\xe0\x3d\x80\x67\x00\x9e\x0c\xc9\x9e\x91\x73\x8f\xef\x4c\xf7\xb9\x76\x1f\xa6\xdd\x17\xef\x6c\x1b\x09\xe4\xdc\x86\x85\xbf\xc2\xdf\x4a\x94\x2d\x58\x62\x27\x45\x9b\xcf\x44\x2e\xe9\x98\x62\xdb\x38\xfc\x2b\x62\xef\xe3\xb1\xe5\x9d\x6a\x89\xd7\xcf\x63\x2e\x4d\x19\xda\x54\x78\x9d\x37\x2c\xfa\x3a\xf1\xfb\x06\xfe\x82\xf8\x1c\xf2\xab\x36\x6f\x0c\xfc\x53\x8c\x0d\xf7\x42\xbe\x37\x8c\x23\x2a\x3f\x38\x87\x2a\x5f\x6e\x45\xe0\x9f\xd4\x72\xcb\x67\xdb\x95\x1e\xf9\x0b\xd4\x1f\x72\x2d\x74\xe0\x2f\xb0\x2f\xd3\xef\x26\xef\x85\xfe\x38\xfc\xb7\x04\x97\xb2\xe7\xda\x31\xc9\xaf\xf2\x71\x57\xd4\x94\x30\xe6\x2d\x8f\x3d\x66\x5e\x44\xe5\x7f\xc3\x58\x7d\x9f\x7f\x4f\x8c\x51\xf2\xcb\xfa\xfa\x44\xc4\xac\x88\x1a\x5f\x88\xc1\x2f\x6d\xd7\xa0\xc5\x96\x7f\x39\x91\x7f\xbe\xe1\xda\xc7\xe5\xdf\xe5\xbc\xad\x68\xf3\x3a\x0c\xfe\xb7\xcc\x37\x99\x5f\x1f\x9a\xdf\xa3\xe9\x39\x0b\x71\x6f\x7b\x1d\xea\x4f\x4e\xbb\xff\xe3\xf0\xcb\xfa\xbb\x64\xa9\x5d\x95\x08\xf5\x77\x41\xb4\xa9\xc4\xe0\x1f\x16\x24\x7f\x92\xcf\xdf\xa4\xd7\x1f\x49\xaf\xbf\x90\xf0\xfa\x33\x43\x86\xc4\xe0\x5b\xb0\xce\xdd\x96\x6b\xbe\xdf\x0a\xcd\x69\xad\xb9\x4e\xcb\x75\x9d\x3f\xea\x57\x9c\x57\xab\x15\xe7\xce\x6a\xd1\x81\xeb\xb6\x6d\xd1\x75\x9d\x55\xd7\x75\x8e\x5d\x57\xc6\x20\xd8\xe3\x18\xb3\xf1\xcc\x71\x5b\x62\x46\xee\x53\x9c\x4b\x76\x4e\x2c\x98\x00\x70\x1e\xc0\x45\xfa\x28\x16\xb6\x55\xb1\x0f\x00\x3c\x02\xf0\x73\x4c\x7b\xc4\xd8\xe7\xec\xaf\x44\x2b\x0b\xd3\x8f\x95\x84\x5d\x64\xec\x53\x00\x1f\x03\xf8\x06\x40\x9d\x9a\xc0\xf3\xf7\x00\x7c\x29\xc6\xaa\x9e\xa9\x9f\x8a\x71\x3f\x15\xf1\xdb\x00\x5e\x31\x2e\x6c\xf7\x37\xfb\x0c\x63\xdf\xb1\xcd\x6c\x87\xf8\x3b\x6c\x57\x17\xf1\xe7\x79\xbe\xc5\x63\xf7\x78\x4c\x8f\x0f\xcf\xbf\xa3\x6f\x09\x7e\xc5\xf9\x1a\xc0\x0e\x63\x4b\x96\xf8\x6d\x6a\x7d\xad\xc5\x97\xa8\x6f\xdb\x32\xfe\x1a\x75\xcd\x8a\xf1\x3e\x10\xf3\x37\xc1\xbe\x6e\x6b\xf1\x3b\xda\xf5\x2b\x19\xae\x95\xed\xfa\xed\x0c\x20\x7f\xfa\xcd\xdf\x44\x11\xec\x6d\x06\xa6\xd0\x38\x05\xd6\x4e\x81\xaf\x0e\x81\xcf\x7f\x05\xae\x1f\x02\x5f\x1c\x02\xdf\x9e\x06\xe7\xf4\x98\x7f\x03\x00\x00\xff\xff\xdd\xcd\xca\x71\xee\x3a\x00\x00")

func staticFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_staticFaviconIco,
		"static/favicon.ico",
	)
}

func staticFaviconIco() (*asset, error) {
	bytes, err := staticFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/favicon.ico", size: 15086, mode: os.FileMode(420), modTime: time.Unix(1502672816, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticGithubCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x39\xf9\x93\xb2\x4a\x92\xff\x8a\x3b\x2f\x26\xe6\x7d\x63\xdb\x02\x22\x5e\xf1\x5e\x6c\x81\x78\xa3\x6d\x7b\xe2\xc4\x6c\x44\x01\x05\x94\x02\x85\x80\xe2\x11\xf3\xbf\x6f\x80\x47\xab\x60\xfb\x7d\xb3\xb1\xe3\x0f\x06\x54\x65\x66\x65\xe5\x9d\xc9\x7f\xeb\xc4\x09\x72\x3a\x54\xd1\xf1\xfc\x64\x63\x6b\x5f\x25\x6a\x80\x55\xe2\xf8\x39\x0b\x3b\xab\x9a\xef\xa9\xd5\x8d\x67\xfd\xae\xc1\x00\x56\x23\xb0\x7c\x48\x74\xbd\xa6\x9a\xd0\xf3\x51\xf0\xc7\x26\xd0\x73\xe5\x9a\x02\x7d\xc4\xb1\x6f\x1a\x55\x69\x7e\x1a\x80\x07\xf1\x6f\x11\x5e\x9e\x84\xc6\x10\x7c\xff\xe3\xc5\x09\x65\xb5\x00\x00\x4d\x18\xbf\x1b\xd1\x5f\x3b\x7e\x9c\x68\xe3\xe9\x24\x7a\x5c\xa8\x31\xad\x78\x8b\x00\x30\x04\x60\x4c\x4b\x5b\x29\x7a\xdf\x47\xf4\xf9\x4e\xb4\x23\x37\x64\x71\x52\xf8\x5c\x2a\xb3\x46\x08\x00\xa8\xc7\x48\xe2\x24\xc2\x04\xa0\x33\x36\xb7\x76\x9f\xd1\x84\x68\x71\xbc\x8a\x4f\x8e\x0f\x39\xf1\xb7\x70\x78\x47\x89\x1e\x4b\x11\x51\x61\x1f\x6d\x0b\x13\x29\x5b\x6e\x9b\x8e\x3c\xef\x47\xf4\x9a\xe3\x5b\x24\x9e\x80\x36\xa3\xf9\x68\x26\x03\x00\x1a\x7e\xb4\xf3\x71\xba\xba\x2a\xae\x2b\x01\x6c\x4e\xcd\x45\xf4\xee\xc7\x4c\x53\xd1\x5f\xdf\x30\x59\x58\xa1\x49\xb4\x17\xf1\x17\xb3\xc2\x93\xe8\x7f\x25\x80\x72\xfd\xb3\x69\x06\x5a\x2b\x82\xef\x95\xa3\xc5\x7a\x7c\x54\xd8\x04\x40\xd0\x95\x66\x65\x29\x47\xfc\xf9\xe0\x2a\x1f\x01\xf0\x18\x8c\xf9\x40\x9e\x9b\x11\x7f\xc2\x3a\xa6\x67\x9c\x85\x58\x06\x23\xbb\x68\x2a\xb3\xe8\xfe\xe3\xe8\x10\x7e\x18\x6d\x59\xf3\x4d\xa9\xe0\x0f\xd4\x66\xe5\xa0\x45\x8b\x38\x42\x05\x28\xfa\x93\xc4\xc2\xd0\x1d\xf0\xa1\x6a\x4f\xa3\x45\x51\x89\x16\x5b\xd1\xfd\xf8\x3c\x6c\x34\xdd\x55\x61\x09\xc7\x32\xb7\x83\xe5\x0e\x68\x4a\xb3\xfc\x80\x63\xf8\x3a\xa6\x82\x4e\x4f\x1e\x62\x47\x9d\x8b\x7b\x57\x6e\xe3\x66\x67\x39\x32\x5a\x0e\x1e\x72\x1b\x7b\xec\x4f\xc4\x7d\xcf\x2e\xf2\x53\xae\x5f\xe7\x3f\xca\x63\x37\xf0\xb9\x06\xb5\xcd\xae\xf2\x14\x74\x18\x9c\xc5\x41\xab\x1e\x16\xb6\x4c\xb6\x92\xad\xf3\xdd\xf1\xc1\xef\xf4\x9d\x59\xa7\x3f\x36\x5a\xe2\x9e\xe5\x8d\x66\x41\x94\xda\x95\xba\x20\xd6\x07\x4d\x71\x7e\xa8\x83\xfa\xa4\x68\xf2\x5d\xa9\x6d\xf4\x3f\x16\x6b\x52\x2f\x8c\xb0\x35\x85\xf3\x85\x20\x7e\x16\xf2\xed\x12\x08\x76\x62\xa7\x17\x1c\x0e\x9b\x85\xde\xce\x4e\xa7\x2b\xd7\xdb\x8d\xad\xf9\xc8\x9c\x75\x95\xc2\x98\x47\x6a\x93\xa6\xbd\x90\xf4\x2d\xdb\x76\xe8\x0f\x66\x26\xab\x1d\xf5\x60\x15\x18\x14\x8c\xdc\xae\x73\xc0\x42\xc9\x1a\xee\x67\x88\xf6\xed\xe9\xc7\x3e\xdf\x0b\x4a\x5d\x35\x4b\x6d\x67\x72\xde\x00\x46\xbb\x2d\xae\x41\xbf\x12\x22\xca\x0d\xbb\x73\x0f\x61\x09\xfa\xbb\x2d\x54\xea\x43\x49\x62\x3d\x3c\xc8\xae\x77\x12\x43\x8c\xb0\xde\x1c\x2c\xc6\xf3\x5d\xb8\xab\xe3\xbd\x3a\x6c\xab\x44\x6e\xf0\xbd\x65\xb1\x5b\x10\xdb\x70\xa4\x06\x60\xcd\xac\xc6\x32\x0e\xb3\x7b\xdb\x54\x51\x69\x1b\x4a\x95\xe5\x68\x3d\x28\x77\xf6\x53\xad\xf8\xd9\xaa\x18\xfb\x71\xc0\x64\x3b\xf9\xfd\xc4\x96\xad\xf6\x27\xe5\x53\xac\xc3\x65\x4b\x53\x9b\x26\x07\x74\x98\xa0\x9e\x08\x27\x4b\x13\xd6\x47\x9b\x79\x2b\x9c\x7e\x1a\xdb\x5e\xc7\xa1\x83\x61\x69\x87\x37\xd3\x6d\x9e\xa8\xe3\xcf\x06\xcb\xd8\x7d\x63\xd1\xe4\x0d\xb9\xa9\x84\x8b\x01\x8f\x01\x68\x34\x3b\x7c\x5b\x02\x00\x1f\x40\x23\x36\x05\x0c\x9a\x6d\x70\x70\x96\x50\x66\xf8\x95\xdc\x04\x80\xc5\x4e\xf9\x10\xce\x71\x76\xc6\x64\xa5\xa5\x70\x90\xda\x75\xe0\x8e\xc2\xed\xfc\x20\x54\x4a\x0b\xb6\x6d\x94\xfb\x79\x7e\x27\x37\x17\x86\x6a\x58\x45\x86\x17\x46\xc3\x2e\x00\x85\xa5\x30\x2d\x0b\x00\xf0\x3a\xb8\xf8\x92\xc8\x5f\xcf\x67\xf5\xc2\x16\x08\xc3\xc5\x10\xf0\x6d\x69\xd9\x35\x80\x2d\x83\xae\x68\xf0\x73\x03\x00\xd4\x77\x97\x72\x53\xe6\xc2\x31\xe6\x8d\xc5\x8c\x37\x98\x95\x3d\xd9\x91\x3a\x60\xa5\x0f\xb3\xb9\x90\xe4\x03\x8f\x69\xd0\xda\x1b\xd3\x9e\x3c\x9c\x08\x10\x86\xeb\x3a\x60\x3f\x04\x73\x67\xda\x66\xbe\x3c\xa8\xd7\x45\x7f\x0b\xc2\x96\x21\x75\xa5\x76\xdd\x69\xf6\xa8\x5d\xc9\xe8\x0c\x05\x10\x4a\xa0\xa3\xb1\x52\x1c\x01\x5a\xf1\xfd\x0c\xb9\x09\x01\x5b\x07\xcd\x4f\x43\x1e\xae\x40\x6b\xdf\x94\x1a\xe5\xbe\x21\x7b\x6d\xa9\xd0\x69\x83\xe6\x54\x96\xeb\xe3\x2c\x10\x97\x20\xdc\xd4\x1b\x2e\x6f\x83\x4a\x57\xaa\x8b\xa1\x24\x98\x15\x9c\xdf\x96\x5b\x65\xbf\x45\xe5\x59\x6d\xa8\xd2\x18\xd8\x60\x05\x7a\x70\xd2\xed\x19\x27\xfa\x63\xb9\xd2\xab\xfb\x6d\x43\x6c\x2b\x81\xb1\x6e\x4d\x3e\xdc\x3a\x2e\x18\x1f\x84\x9f\xee\x3f\xc7\xf6\x58\xd3\x06\xf6\x7a\x3c\x1f\x9b\xe2\x7c\xed\x11\x85\x31\x86\x74\x63\x19\xba\xf5\xad\x1e\x0a\xbc\x66\x6b\x73\xa1\x08\xa6\xdd\xc6\xa6\x80\x8a\x92\xde\x6f\x74\x98\x4a\x77\x3c\x1c\xb3\xe5\x81\x52\xc9\x5b\x6b\x39\x1c\x34\x17\x3b\x34\x41\x56\x9f\x99\x30\x9f\x5c\x56\x05\x9e\x11\x08\x1d\x17\x6e\x66\xa5\xc9\x90\x5f\x3b\x8d\xd5\xc4\x5f\x02\x39\xbf\x1a\x4c\x68\xf5\x23\x5b\x07\xc6\x76\x17\x3a\xb4\x6a\x2e\xea\xe1\x44\xd1\x38\xa1\x81\xed\xe6\x3c\x3c\x84\x0d\x2e\xf8\x50\x1a\x6d\x75\x29\x5a\xd9\xed\xd6\x96\xf2\xca\x1e\xb0\x65\xc4\x05\x33\xaf\x0b\x3c\x9b\x5d\x74\x2c\x41\xd1\x7c\x6f\xb7\xf2\x7b\x34\x08\x67\x4e\x7e\xcf\x8f\x3a\x5d\x57\x56\xd6\x65\x30\x87\x70\xac\x94\xe3\xfb\x32\xe5\x25\x08\x07\x02\x45\x2d\x3c\x1e\x0d\xfb\xf5\xe1\x60\x36\xc8\xe7\x7d\x8d\x8f\xc4\xfc\x89\xe5\x99\x0c\x44\xb1\x27\x86\xd2\x58\x64\x37\x07\x52\x5c\x1c\x48\x51\x61\xf8\x9d\xe6\x34\x06\x2a\xe8\xed\xfa\x4b\xc0\x29\x0c\xbf\x1f\xfb\xa1\x50\x5e\xca\xa1\x41\x4d\xad\xfe\x86\x08\xe3\x19\x90\xd6\xfd\x83\x74\xf0\x49\x97\xf6\x44\xb3\xbf\xe6\xf7\xe2\x1e\x79\x46\xf1\x43\xea\x58\xf2\x66\xba\x41\xe2\xb8\xab\x6a\xf9\x72\x65\xc3\xbb\x8e\xbb\x6d\x8b\x53\x62\xa3\x56\x8f\x48\x3e\x00\x88\x6e\x6b\xec\x25\x9f\xb0\x0c\x99\x0d\xc7\x54\x49\x18\xf2\xe3\xe6\x96\xea\xf0\x26\x34\x56\xa5\xd6\xf0\xd0\xdd\xa9\x90\xf1\x3b\x82\x48\x9b\xf5\x80\x1d\x36\xb2\x95\xce\x60\x44\x39\x0a\x84\x72\x5d\x18\xea\xa1\xd0\x29\x81\x4d\x01\xb4\x96\xd9\xde\x80\x2e\x34\x24\xdb\xe6\x54\xab\x54\x2a\x17\xb7\x5b\xe4\x50\x2b\x7e\xd9\x12\x78\x53\x77\xe5\x4d\x1f\x16\x3f\x4c\x5a\xa5\x10\x33\xdf\x14\x96\xe2\x76\xd6\x2c\x4d\xb4\x8f\x7a\x6f\xc1\xf6\x2b\x8c\x33\xb0\xb3\x22\x3f\xdf\x00\xa5\x65\xb7\xa5\xd1\xa7\xe4\x67\x59\x38\x11\x35\xb6\xaf\x15\x84\x56\xbd\xdc\xd7\xb6\x83\xde\xd8\x07\x4c\xb3\x57\x96\x2a\x1f\x83\xba\xa2\xf6\xb2\x66\xbd\x24\xd0\x3b\x02\x5b\xa8\xd7\x19\x89\x90\x50\x0d\x71\x46\xb3\xea\x6a\x27\x64\xc7\x93\xf2\x78\xb7\xf5\x65\x6e\x4e\xa1\xde\x87\xfd\x69\x7a\x7b\x66\x36\xc5\xa4\xe7\xae\x3c\xc5\x2d\xb3\xbd\xde\xf0\xa3\xd9\x2e\xa9\x9c\x3f\xc0\x93\x83\x3b\x6b\xcf\x46\xc5\xe6\xc1\x1a\x19\x93\xc3\xa1\xc7\x8f\xf0\x6a\xf0\xd1\x18\x0f\xe6\x6b\x6b\x5f\xf2\xd6\x3b\x6a\x41\x0f\x8b\x3c\x68\x93\x05\x3f\x6a\x60\x73\x28\x0f\x07\x03\x5e\xd4\x56\xc2\xc0\x98\x8f\x07\x2d\x40\x95\x5a\xa0\xb9\x6c\xce\x70\x7b\x09\x3f\x16\xfd\x19\x5d\xc8\x67\x2d\x9b\x1b\x55\x1a\xe3\x92\xd7\x6b\x35\x3a\x9c\x3e\x54\x56\x60\x3c\x68\xd2\x4b\x66\xd0\x90\x36\x6a\xb7\xd3\xf1\x77\xed\xa9\x3e\x1c\x7c\x5a\xd9\x4a\x67\xaf\x41\x6e\x64\xd1\xda\x44\x36\x47\x82\x4d\x6b\x7b\xc1\xd2\x09\xaa\x6f\x11\xbb\x96\x64\xad\x27\x2a\xfa\xba\xa5\x17\x06\x79\xa0\xd5\x37\xb6\xbf\x8c\xf5\x65\xf7\x0d\x99\x00\xb0\x18\xca\x4b\xde\xde\x83\xa6\x3c\x5c\xd8\x9a\xd9\x2b\x1f\x7a\x5a\x5d\xdc\x6b\xe0\x53\x27\x60\xdd\x3e\x67\x5f\x09\xf0\x21\xe8\x02\x5e\x02\x7c\x3e\x9f\x8f\xf2\x1c\x48\x96\x18\xe7\xea\xe3\x8f\x3f\x7e\x64\x74\xe2\xd9\x30\xf8\xfd\x6f\x51\xed\xf2\xb7\x1f\xff\x7a\xb7\xa1\xb7\xd2\x48\xe8\xe4\x14\xa2\xed\x8f\x39\xdb\xcf\x05\x68\x17\xe4\x7c\x7c\x40\x39\xa8\x2d\x37\x7e\x50\xa5\x29\xea\xaf\xb5\x5c\x88\x94\x15\x0e\x9e\xec\x5a\xd8\x41\x39\x13\x61\xc3\x0c\xaa\xf4\x7b\xb1\xa6\x12\x8b\x78\xd5\xdf\x18\x96\xa9\x30\xa8\x76\x5b\x53\xe5\xa0\xeb\x5a\x28\xe7\xef\xfd\x00\xd9\x6f\x7c\x54\x59\x49\x50\x1d\xc5\xaf\x0d\xe2\x04\x6f\x3e\x32\x08\xca\x6c\xf0\x5b\x0b\x59\x5b\x14\x60\x15\xbe\x01\x0f\x43\xeb\xcd\x87\x8e\x9f\xf3\x91\x87\xf5\xb7\x98\x46\x26\x3e\x24\x83\x6c\xb2\xc4\x57\xac\xc7\x57\x7f\x6f\x2b\xc4\x3a\x71\x10\x71\x5d\xa5\x39\x77\x97\x60\x37\x24\x9e\x96\x0b\x3d\xe8\x56\x15\x0f\xc1\x55\x2e\x7a\x7f\x10\x4d\xe6\xdd\xb5\x72\xea\xf1\x7c\x31\x0e\x96\x0a\xa5\x74\x10\xfa\x2d\x65\xd5\x8f\xff\xb7\x17\x74\x8a\x2a\xaa\x6a\x31\x0d\x1d\xa5\x61\x23\xe7\x7a\xae\xce\x32\x2a\x9d\x86\xe8\xdb\xf8\xf9\xc1\x3e\x7d\xbc\xd3\x48\xea\xc9\x4e\x70\x05\x62\xca\x5c\x01\xa6\x01\xad\x2e\x20\x5a\xa9\x00\xd9\x4a\x2a\x23\x69\x6c\xb8\x5a\xea\xf2\x89\x3b\xd7\x47\x67\x2e\x53\x61\xbc\xf4\xd5\x93\xb4\xd5\x54\x81\x9d\x77\x7d\xef\xfb\x5d\x78\xd5\x47\x81\xd1\x39\x26\xed\x36\xdb\x54\x02\x76\x78\xc1\x44\x05\x8e\xa1\x52\xe5\xa0\x6c\x2e\x30\x4a\x81\xd6\x98\x72\x1a\x0c\xc6\x17\x18\x1d\xea\x8a\xae\xd6\x14\xa8\xae\x0c\x8f\x6c\x1c\x2d\xf7\x12\x59\x65\x5e\x22\x3f\xd7\x92\xca\x54\xab\x0a\xd2\x89\x87\x8e\x2a\x71\x02\xe4\x04\xd5\xbf\xfc\x8f\xf4\x97\x54\x85\x5e\x45\x7d\x6a\x8e\xc2\x93\xdf\x94\x28\xaa\xf6\xd2\x5e\x6c\xeb\xc2\x63\xa9\x50\x54\x29\x3d\x15\xc6\x4c\x93\xb1\x6d\x9e\xad\x32\x75\xd3\x7f\xc6\xca\x73\xcf\xb2\xf1\x09\xc7\x0f\xf6\x16\xaa\xe2\x00\x5a\x58\xad\xbd\xf4\x0a\x5b\x79\x7a\xe9\xe7\x38\xda\xbd\xe6\x53\x14\xa3\xeb\x08\xe9\x54\x3a\x9b\xf4\xbd\x1b\xa6\x61\x53\xba\xae\xb3\xa9\xd8\xea\xbd\x61\xa6\x1f\xad\x68\xe9\xca\xc2\x5f\x16\xc5\xe9\x65\x3d\xed\xe8\x6f\xe4\xab\x79\xcf\x44\xf5\x3c\x6a\x29\x57\x17\x2c\x96\x39\x8a\x4b\x0f\x28\xc6\x05\xa6\x52\xac\x68\x30\xf5\x70\x95\x78\xd6\x31\x4e\x4d\x1a\x52\x89\x07\x03\x4c\x9c\xea\xc6\xd1\x90\x17\x85\xfa\xda\xf7\x6e\x7e\x6e\xf3\x8f\x1a\xf6\x5d\x0b\xee\xab\xd8\x89\xf3\x83\x62\x11\x75\x55\xdb\x22\x2f\xca\x41\x56\x0e\x5a\xd8\x70\xaa\xf1\x19\x01\x71\x6b\x3a\xb6\xac\xaa\xba\xf1\x3c\xe4\x04\x42\x44\xfe\x91\x2c\x3c\x26\xa4\x17\x78\xd0\xf1\x5d\x18\xa1\x24\xa0\xab\x50\x0d\xf0\x36\x11\xaf\x60\xd5\x24\x5b\xe4\x1d\xc9\x26\x88\x99\x0a\xb1\x16\x98\xd5\x84\xe5\xf8\x81\x47\x1c\xe3\x4e\xfe\xd8\x31\x91\x87\x13\x07\xa5\x40\x2a\xc4\xd2\x50\x82\x7f\x93\x3e\x7e\x65\x4d\x06\xd9\x35\x1b\x7a\x06\x76\xaa\xef\x5c\x09\xd9\x99\x04\x07\xd8\x36\x8e\x0a\xf1\x34\xe4\x9d\x3d\xcc\x21\x4e\xc2\x3b\x54\xa2\x25\x6e\xb8\x52\xb4\xc7\x25\xd7\xbb\x9f\xc3\xd8\xc4\x21\xbe\x0b\x55\xf4\x76\x7d\xba\xcd\xe8\xc8\x4e\xf0\xee\x1d\x15\xb2\x8b\xb6\xb1\x63\x54\xcf\x01\x2e\xa7\x90\x5d\xed\x9c\xf4\xa9\x5a\x24\x55\xdd\x22\x61\x75\x8b\x7d\xac\x58\x09\x56\xb1\xe3\x6e\x82\x98\x8b\x8b\x24\x2f\x02\x48\x5e\x3d\x06\x7d\x45\xf0\x1f\xc1\xde\x45\x7f\xa8\x26\x52\x57\x0a\xd9\xfd\xf3\x96\xc1\xb3\xdc\x22\xfe\x5c\xa8\x69\xd1\x52\xe2\x90\xbf\xa7\x23\x3c\x67\xfb\x22\xbc\x0b\xf7\x5f\x02\xbb\xac\xdc\x56\x41\x4f\xac\xe5\x26\x43\x72\x9c\xc6\xd5\x1e\x5d\x2c\x4d\xc9\x17\x93\x7d\xea\x8e\x3f\x61\x92\x1c\x95\x10\x80\xe9\x1d\xaf\xca\x3b\x6b\x82\x2e\xba\xbb\xcc\x8d\x2a\x4d\xac\x69\xc8\xb9\x89\x5a\xb7\x1e\x57\x3b\x09\xad\x4a\xd5\xae\xd2\x0b\x02\x62\x57\x69\x77\x97\xf1\x89\x85\xb5\xcc\x6f\x9a\x8e\x18\x94\x88\x2f\xa6\x77\x4d\x95\x97\x08\x11\x40\xc5\x8a\xa2\xca\x39\x71\x26\xd2\x66\x84\x02\xf5\x00\x79\x8f\x18\x16\x82\x5e\x55\x21\x81\xf9\x0d\x72\x0c\x7a\xf5\x25\x17\xaa\xb1\x3d\x5c\xb8\x56\x89\x65\x41\xd7\x47\xd5\xcb\x43\x02\x3d\xe1\x4e\x81\x79\x7c\x6a\x56\x66\xa2\xe6\x32\x99\xc4\x4a\x21\xb1\xc2\x26\x56\x8a\x89\x15\xee\x78\x52\x53\x14\x2e\xaf\x3a\xbb\x48\x3d\x85\x91\x9b\x70\x53\x60\xdc\x5d\xed\x95\x3d\x30\xb7\xf1\x89\xfd\x09\x84\xc2\x2d\x02\xf5\x13\x08\xec\xf1\xa1\x6f\x78\x85\x50\xbc\x45\xf8\x19\x96\xb8\x5b\x84\x9f\xb8\xb4\xfb\x9d\x4c\x69\xca\x4d\xc4\x83\x38\x89\xad\x37\x24\x40\xc7\x67\xe1\x6b\x63\x3d\xaa\x8e\x58\x17\x83\xc9\x59\x48\xff\x72\xb8\x9f\xd3\x24\xb1\x32\x24\x41\x72\x13\x2d\x1e\x2d\xec\x9f\x0b\xb0\x5c\x14\x0d\xab\x16\x09\x91\x97\xf3\x88\x0d\x9d\x24\x57\x27\x9c\x54\x42\x29\xeb\xe4\x09\x3c\x39\xc3\x3f\x39\x1b\x5a\xae\x99\x28\x86\x34\xed\x22\xe6\xd3\xf5\xd3\xd2\xd8\x5d\x8c\xf5\xf5\x28\x31\xe5\x3c\x64\x6c\x2c\xe8\xbd\x09\xc4\xf1\x89\x05\xfd\x37\x0b\x2b\xe8\x14\xfd\x32\x11\xc0\x9b\x84\x1c\x8b\xbc\x09\x64\xe3\x61\xe4\xa5\x27\x33\x26\xa9\xc3\x28\x1d\x7e\xa7\x80\xda\x7f\x8e\x95\x6b\xad\x94\x56\x16\x9d\xf8\x49\x2b\xcf\xa8\x07\x7b\xfa\x2f\x6c\xbb\xc4\x0b\x60\xb2\x0e\x8a\xa0\xe9\x7b\x68\xd6\xdd\x7d\x0f\xcf\xdc\xc3\x97\x5f\xc1\x17\xee\xe1\x23\xcf\xfe\x1e\x81\xbd\x47\x60\x5e\x72\x54\xbc\x47\x88\xc2\xd9\xf7\x08\xdc\xc3\x95\xa9\x6f\x10\x7e\x35\x1b\xfd\xfb\xa9\xe8\xcf\xbf\x57\x75\xec\xf9\x41\x4e\x35\xb1\xa5\xdd\xd9\xe0\x53\xee\xfe\xfc\x7b\xd5\x82\x8f\x28\x17\x4b\x7d\x2e\x04\x58\x75\x48\xf0\xfb\x3f\x4c\x0f\xe9\xff\xfc\x71\x2e\x3a\x2e\x75\xca\xcf\x14\x1d\xef\xd0\x51\x4d\xe2\x1d\x75\x8b\xc0\xa0\x1a\x09\xf1\x52\x4a\xe5\xbc\x38\x98\x46\xd1\xf8\xd6\xa9\x73\x71\x06\xb8\x1b\x04\x3d\xa1\x59\xd5\x89\xba\xf1\x2f\x15\x78\x32\x1a\xb8\x8f\x21\xe7\x2b\xe6\x26\x83\x57\x32\x3c\x3d\xae\x68\x89\x95\x58\x61\x69\x35\xf2\x77\xb9\x80\x4b\x3a\xef\x57\x05\xf5\xce\x14\x91\xfd\x55\x6b\x5e\xea\xa9\xc8\xb0\x33\x54\x4a\xd7\x87\x68\xc4\xa2\xf2\xb5\x82\xfa\x26\xc9\x5c\x69\x66\x68\x64\xd7\xee\xa6\x65\x97\x0a\x26\x16\x7f\xcc\xc1\xf7\x75\xd7\x17\xd5\x3f\x9f\x9a\xe1\x77\x38\xcf\xcd\xf0\x11\x6b\xa5\x68\xe9\xcd\xdf\xe5\x36\x05\x77\x97\x29\x5e\xb2\xf3\x29\x38\xd2\x8f\xd6\x13\x99\xd3\xf9\xbe\x2c\xcb\x6a\x45\xee\xb1\x75\xb4\xb1\xa6\x59\x28\xad\x23\x3f\x8f\x6f\x4e\xd2\x3d\xc9\x24\xaa\x4a\x7f\x53\x39\x55\xd1\xe8\xfb\x7a\x35\x77\xd7\x0b\x5f\xf6\x3c\xa8\xe1\x8d\x1f\xf1\x59\x8b\xdb\x04\x13\x6a\x24\xac\x62\xc7\x47\x41\x86\xca\xe4\x22\x6a\x54\xe6\x49\xff\xfc\x9f\x2a\x01\x99\x1b\x17\xbc\xb1\xd2\xc7\x92\xe7\x61\x38\xcb\xa4\xf0\x7b\x4d\x43\xf1\x87\xf9\x24\xf7\x2f\xf6\x0b\x2f\xf6\xd9\x17\xfb\xc5\x17\xfb\xdc\xfd\xfe\xa5\x85\xa2\x15\x5a\x67\x0a\x4f\xac\x22\x6e\x1a\xb1\x85\x83\xfd\xb9\x8b\x49\xde\xfa\xd4\x56\x5d\xa2\x52\xf2\xd6\x2f\xf6\x0b\x2f\xf6\xd9\x17\xfb\xc5\x17\xfb\xdc\xfd\x7e\xa2\xfd\x4b\x8b\xda\x8f\x97\x7a\xa5\xd8\x5f\x82\x2e\xfc\x12\x34\xfb\x4b\xd0\xc5\x5f\x82\xe6\xbe\x83\x3e\xde\xa8\xfe\xc9\xe8\xc0\xfc\xaa\x88\xce\x8e\xf3\x5e\x40\x76\xed\x7e\x3c\xf3\xb4\xab\x45\x10\xa9\x28\x31\x79\x35\x99\x17\x34\xe9\xf7\xe2\xbf\x41\xf5\xb6\xc7\xa2\xe3\x20\xff\x7d\x57\x95\xb2\x7f\xdb\x44\xbd\x97\x4b\x69\x24\xb8\x3b\x90\xe2\x63\xa6\xf9\xf5\x0e\x87\x49\x1e\x12\x37\x20\xa9\xdd\x47\x6a\x8b\x91\xda\x8f\xfc\x52\x07\x6c\xe1\xe3\xe3\x77\x28\x68\x59\x49\xa8\x3f\xef\x9a\xc0\xb4\x44\x6f\xe1\xac\x85\x6f\x81\x52\x15\xa1\x59\xcf\xc7\x02\x9a\x95\xd1\x82\xe3\x63\x81\x70\x3d\xf0\x7e\xfa\x56\x4b\xce\xd5\x5f\xb4\xb1\x11\x79\xed\xb6\x56\xe0\x52\x53\x43\xfa\x64\xe4\x92\xa9\x4f\x29\xfa\x34\x10\x8d\x3f\x42\x5e\xe7\x40\x70\x13\x90\x54\xdc\x4c\x60\xbe\x1a\x33\x5d\xe0\x52\x8b\xb0\x4c\xf0\xc5\x35\xe7\xee\x32\xf4\x29\xe1\xc6\x79\xfb\xe5\x1c\xe9\x4c\xc1\x4b\xce\x85\x7f\xd3\x75\xfd\xe2\x69\xb1\x88\xbf\x48\x9d\x4a\x80\x67\xa4\xaa\x4e\x60\x9e\x4a\x9c\xdf\x19\xe7\x47\x1a\xe1\x78\x8e\x9f\x36\xab\xb5\xe1\x2e\x77\x23\xbb\x27\xe3\xd2\x54\x56\x53\xc8\xfd\x23\x4e\x66\x7f\xc4\xa5\xf6\x3f\x1f\x5c\x2b\x65\x2a\xf1\x85\x11\x81\x7c\x21\x9c\x4a\xf5\x34\x8c\xb8\xe5\xbe\x88\xfe\x9d\x41\x76\xe6\x9d\xfd\x9a\x49\x53\x37\x06\x59\x2e\xfe\x35\xc9\xb6\x67\x28\xf0\x77\xa6\xf4\x56\xa0\xdf\x0a\xc5\xb7\x77\xaa\xf8\x23\x59\x39\xa5\xb5\xdd\x5f\x0e\xe9\x10\xcf\x86\x09\x6f\x74\x3d\xf4\xe7\x1d\x6b\x54\x1a\x4b\xb1\x84\x63\x52\xb1\x5b\x9f\x69\xd5\x42\x13\x07\x28\x9e\xf0\xa1\xaa\xeb\xa1\x57\x73\xcb\x44\x7b\x62\x62\xc3\xb4\x22\x89\x1d\x5f\xbb\xce\x17\xf0\x6d\xe7\x70\x9d\x20\x24\x98\xfb\x1e\x3f\xad\x19\xb9\x48\x20\xf6\xe5\x3b\x57\x7c\x50\xce\x7d\x7d\xc7\x16\xd3\x8c\xec\xfc\xf9\xe9\x27\x54\x74\xb2\x8c\xfb\xea\xbd\xf6\x65\xdc\xf1\xf9\x29\xca\x79\x9c\xd6\xa7\x0d\xc3\x6b\x8f\xda\x4f\x72\xfa\x53\x7a\xd2\x37\x96\x95\x53\x89\x6d\xe3\x20\xf3\xae\x04\x4e\xee\xd2\x4a\x46\x2d\x6f\x55\xc3\x7e\xe4\xcd\xda\x8f\xf3\xd8\xfc\xee\x43\xdb\xcd\xd4\xf7\xf9\xd7\xb7\x5f\x6a\x5f\xe2\xce\x25\xf3\x7f\x9d\x12\xfd\x7f\x77\x3e\x1a\xad\x15\x35\x98\xde\xf9\xdc\x77\x45\x3f\xd7\xf9\xa4\x87\xd1\x6a\xfc\x35\x06\x69\xd9\xf7\x88\x0a\xc9\x59\x50\x41\xd6\xd1\x25\x3e\x8e\x2b\x56\x0f\x59\x30\xc0\x5b\x54\x3b\xe4\xb0\xa3\xa1\x5d\x95\x7e\x54\x47\xfc\x51\x24\xa1\x6f\x07\x85\x27\x52\x27\xb8\x5c\xfc\x4d\xa6\x8a\x9d\x2d\xb4\xf0\xf5\xd3\xb0\xaa\x30\x6c\x21\x39\x72\x08\xa0\xbf\xca\xc5\xa3\x4a\x1c\x20\x3b\x31\xb4\x4c\x1d\x7d\xdc\xe3\x64\x1f\x69\xdc\xe4\xee\x14\x17\x7a\x80\x3e\x7f\x40\xba\xf8\x49\xe6\x14\x6a\xe3\x66\x3d\x47\xbf\x73\xc8\x4e\xd7\x6d\xea\x07\xb8\x14\xdd\x21\x84\xfe\xf5\xbf\x01\x00\x00\xff\xff\xd7\x70\x7c\x99\x6d\x2d\x00\x00")

func staticGithubCssBytes() ([]byte, error) {
	return bindataRead(
		_staticGithubCss,
		"static/github.css",
	)
}

func staticGithubCss() (*asset, error) {
	bytes, err := staticGithubCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/github.css", size: 11629, mode: os.FileMode(420), modTime: time.Unix(1515372351, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\x4d\x6f\xd4\x30\x10\xbd\xe7\x57\x0c\x73\x02\x89\x24\xdb\x8a\x52\x58\xec\x80\x04\x9c\xe1\xc0\x85\xa3\x63\x4f\x37\x43\x1d\x3b\xb2\xa7\xfb\xc1\x6a\xff\x3b\xca\x47\xcb\x2e\xa8\xb9\x58\x33\x6f\xde\x7b\xf3\x11\xf5\xe2\xcb\xb7\xcf\x3f\x7e\x7e\xff\x0a\x9d\xf4\xbe\x29\xd4\xf8\x80\x37\x61\xa3\x91\x02\x36\x45\xa1\x3a\x32\xae\x29\x00\x00\x54\x4f\x62\x20\x98\x9e\x34\x6e\x99\x76\x43\x4c\x82\x60\x63\x10\x0a\xa2\x71\xc7\x4e\x3a\xed\x68\xcb\x96\xca\x29\x78\x0d\x1c\x58\xd8\xf8\x32\x5b\xe3\x49\x5f\xe1\x22\x24\x2c\x9e\x9a\xe3\x11\xaa\xc1\x48\x07\xa7\x93\xaa\xe7\xd4\x0c\x7b\x0e\xf7\x90\xc8\x6b\x64\x1b\x03\x42\x97\xe8\x4e\x63\x7d\x67\xb6\x63\x5c\xb1\x8d\x1f\xb7\xfa\x1a\xa1\xfe\xaf\x3e\xcb\xc1\x53\xee\x88\xe4\x89\xb5\x61\xe9\x1e\xda\xca\xe6\x3c\x11\x54\x3d\x0f\x54\xa8\xa9\x76\x56\xa8\x7a\x93\xee\x5d\xdc\x85\xb2\x8d\xee\x00\xc7\x29\x39\x7e\x6d\xdc\x97\x99\x7f\x73\xd8\xac\xa1\x8d\xc9\x51\x2a\xdb\xb8\xff\xf0\x84\xf7\x1c\xe6\x51\xd7\x70\xbd\x5a\x0d\xe7\x88\xd9\x3f\x22\xef\xdf\xfd\x83\xa4\x0d\x87\x35\xac\xc0\x3c\x48\xfc\x9b\x1f\x8c\x73\x93\xd1\x9b\x9b\xc7\xf2\x53\x31\x3d\x9f\x7a\x72\x6c\xe0\xe5\x99\xe6\xed\xdb\xdb\x61\xff\xea\xac\xd3\x67\x47\xb8\x90\xbe\xba\x39\xef\xe4\xb4\x98\xa8\x7a\xd9\x45\xa1\x46\xf2\xb2\x55\x93\x84\xad\x27\x60\xa7\x71\x48\x34\x5e\x1c\xc1\x7a\x93\xb3\xc6\x0b\x33\x04\x39\x0c\xa4\xa7\x3f\x48\xd5\x0b\x6d\x11\xc9\x36\xf1\x20\x90\x93\xd5\x58\x2f\x2a\xd5\xaf\x8c\x8d\xaa\x67\x68\xbc\xc8\x6c\x3a\x9e\x66\x94\xf8\x13\x00\x00\xff\xff\x60\x02\x6c\xd3\x94\x02\x00\x00")

func staticIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticIndexHtml,
		"static/index.html",
	)
}

func staticIndexHtml() (*asset, error) {
	bytes, err := staticIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/index.html", size: 660, mode: os.FileMode(420), modTime: time.Unix(1503709035, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticPreviewJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x41\x4b\x33\x31\x10\x86\xef\xfd\x15\x2f\xbd\xec\x2e\x85\xf4\xfe\x95\x5c\x3e\x11\x14\xf4\xa4\xe0\x39\x26\x63\xbb\x98\x9d\x29\xc9\xec\x46\x91\xfe\x77\xc9\xba\xb5\x1e\x3c\x98\x53\x48\x9e\xf7\x99\x79\xdb\x97\x91\xbd\xf6\xc2\x68\x3b\x7c\xac\x00\x60\x72\x09\x63\x8a\xb0\x68\x4a\xfe\xb7\xdd\x36\xd8\xa0\xf4\x1c\xa4\x98\x28\xde\x55\xd8\x1c\x24\xeb\x2f\xcf\x47\xa7\x07\x76\x03\x61\x53\xb3\xcd\xee\xdb\x77\x4c\x34\xf5\x54\x60\x11\xc4\x8f\x03\xb1\x9a\x3d\xe9\x75\xa4\x7a\xfd\xff\x7e\x1b\xda\xf5\x82\xac\xbb\x4b\xca\x0b\x33\x2c\x98\x0a\x9e\xe8\xf9\x41\xfc\x2b\x69\x3b\xa6\xd8\xed\x56\x33\x53\xff\x8d\xb0\x8f\x92\x09\x16\x97\x2a\x34\x11\xeb\xb9\x4f\x3d\x8b\xdc\x28\xbd\xe9\x95\xb0\x12\x6b\xed\x57\x05\xf4\x95\x99\x25\x61\x59\xf9\xf4\x53\x3f\x50\xce\x6e\xff\xc7\x01\x3d\x33\xa5\x9b\xc7\xfb\x3b\x58\xcc\x90\x09\x4e\xdd\xd9\x7a\xea\xda\xee\x33\x00\x00\xff\xff\xe4\x18\x5f\x51\x72\x01\x00\x00")

func staticPreviewJsBytes() ([]byte, error) {
	return bindataRead(
		_staticPreviewJs,
		"static/preview.js",
	)
}

func staticPreviewJs() (*asset, error) {
	bytes, err := staticPreviewJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/preview.js", size: 370, mode: os.FileMode(420), modTime: time.Unix(1502658362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/favicon.ico": staticFaviconIco,
	"static/github.css":  staticGithubCss,
	"static/index.html":  staticIndexHtml,
	"static/preview.js":  staticPreviewJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"favicon.ico": &bintree{staticFaviconIco, map[string]*bintree{}},
		"github.css":  &bintree{staticGithubCss, map[string]*bintree{}},
		"index.html":  &bintree{staticIndexHtml, map[string]*bintree{}},
		"preview.js":  &bintree{staticPreviewJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
