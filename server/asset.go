// Code generated by go-bindata.
// sources:
// static/favicon.ico
// static/github.css
// static/index.html
// static/preview.js
// DO NOT EDIT!

package server

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x31\x68\x1b\x57\x18\xfe\x2c\x47\xaa\x29\xb2\xaa\xc1\x90\x04\x04\xf6\xe0\x80\x3d\xb8\x78\x30\xe1\x54\x42\x12\x4a\x43\xb7\x66\x89\xf7\x0e\x46\xcd\x54\x0c\x1d\xaa\xe1\xb0\x5c\x1a\x4a\x3c\x39\x4b\x0c\x59\x0a\xc9\xa4\x60\x08\x21\x83\x03\x9d\xe2\x96\x0c\xc6\x29\x64\xca\x54\x9c\x66\x71\x17\xd3\x74\xf4\x81\xec\x2b\x4f\xf7\x5d\xf9\x79\xbc\x27\xdd\x49\x8a\x4e\x57\xdf\x07\x3f\xbf\x74\xf7\xfe\xf7\x7d\xef\xdd\x7f\xff\xbd\x7b\x12\x30\x86\x71\x2c\x2e\x2a\x3f\x83\xe6\x25\xe0\x32\x80\x99\x19\x7e\x2f\x03\x07\x97\x80\x72\x39\xf8\x7e\xfb\x1c\xf0\xd3\x65\x60\x0e\xc0\x22\x80\xaf\x11\x1c\x6f\x63\x16\x19\x32\x64\xc8\x90\x21\x83\x8e\x1c\x80\x7c\x4a\x2c\xa7\x69\xaf\x02\xd8\x02\xf0\x4b\x4a\x6c\x8b\x9a\x15\x6e\x02\x38\x00\xe0\xa7\xcc\x0e\xa8\x7d\x5f\x7c\xdf\x04\x70\x77\xc4\x6d\x53\xcc\xb7\xd2\xee\xf1\x73\x2d\x81\x7b\xae\x57\xd4\xa8\x39\xd4\x7e\x02\x60\x39\x69\x51\x31\xb0\x4c\xcd\xfe\xff\x58\xbf\xaa\x51\x45\xcd\xf2\x11\xfa\xee\x35\x0e\x86\xba\xd8\x8f\xfe\x69\xd6\xaa\x7d\x61\x51\xee\x11\x55\xd7\x5e\x6a\x71\x37\x23\xc4\xa9\x71\x7e\x27\xea\x62\xbf\xfa\xe7\x01\x1c\x69\x35\xeb\x6e\x84\xbe\x6f\x88\xfb\xca\x8f\x58\x1b\xf2\xd4\xee\x71\xbc\xf3\x29\xd2\x9f\xe3\x79\xc9\xf5\x92\xd7\xff\x43\xeb\x9f\x36\x5c\xef\xb8\xfa\x97\x0d\x3c\x3e\x73\xd7\x36\x86\x41\xe8\x57\xf9\xda\xe4\xb3\xa4\xda\xa3\xfe\x1b\x5d\x9e\xfd\x4d\xf2\x0c\x5a\x7f\x9e\x9f\x4f\x0c\x73\x15\x55\x7f\x35\xc2\xba\xe5\x84\x6b\x1d\x7d\x0c\xfd\xea\xaf\x19\x34\x6e\x71\x5c\x51\xf4\x57\xc5\xba\xa5\x9b\x79\xe4\x2d\x0e\x48\xbf\x6d\xde\x3c\xd6\x90\x6e\xfa\x8b\xec\x47\xae\x27\xf5\xfe\x3c\xde\xc3\xb2\x4d\x75\x00\xfa\x9b\xec\xd7\x36\x57\x47\xbc\x0e\x9d\xf4\xeb\xef\x19\x39\x8e\x47\xef\x67\xde\xb0\xee\xef\x57\xbf\x67\x88\x3b\xe9\xd2\x26\x4a\xfd\xb7\xe9\xb7\xa1\x57\xfd\xa6\x1a\xb7\x69\x98\x6f\xdd\x46\x51\xff\x01\xdb\x84\x75\x34\x4d\xfa\x8f\xb4\x35\xcd\x74\x97\xfb\x62\x94\xf4\x87\x75\xc6\xf4\x0e\x6d\xab\xe7\xa3\xa2\xdf\xf6\x3c\x91\xfd\x9a\xc6\x9c\x84\x7e\xd3\xfa\xb9\xd9\x65\x5d\x15\xae\x23\xf7\x63\xae\x9f\x6b\x5a\xfb\x4e\x6b\x9f\xa8\xfa\x7b\x7d\x0f\xc9\xf7\x10\x67\x8a\xe9\xf4\x2e\x73\x16\xde\x1f\x47\x19\x52\x7f\xda\xf7\x4f\xd2\xbe\x7f\x95\xf6\xfd\x43\xa4\x78\xff\x56\xd6\xa8\x34\xef\x9f\x67\xc8\x90\x21\x43\x86\x33\x06\xbf\x8d\xfe\xfd\x0b\xd5\xd9\x38\xb0\x8e\xf6\x1f\x8e\xfe\xc3\x35\x75\xba\x65\xf7\x57\xa7\x8f\x1b\x6d\xff\xc9\x71\xe3\x2f\xfa\xdf\xe8\x7f\x50\xbe\x54\x6f\x40\xf9\xa2\xb3\x06\x57\xf9\x0b\x2e\xae\x00\x57\x27\x2e\xd4\xdb\x1e\x68\xfc\xd8\x32\xf8\xb1\xf5\xc0\x8f\xbf\x08\xfc\x47\x7f\xd2\xff\x13\x78\xf2\x74\xd3\x17\x22\x1c\x57\x38\xce\x41\xcd\xdb\x1c\xd0\xfe\x77\xd6\x75\xf9\x3f\xad\xf2\x70\x73\x20\x43\x86\x88\x28\x00\x98\x1c\xb2\x15\xc8\xbd\x04\xe0\x21\x80\xdf\x87\x6c\x0f\xc9\xbd\x07\xe0\x3d\x80\x67\x00\x9e\x0c\xc9\x9e\x91\x73\x8f\xef\x4c\xf7\xb9\x76\x1f\xa6\xdd\x17\xef\x6c\x1b\x09\xe4\xdc\x86\x85\xbf\xc2\xdf\x4a\x94\x2d\x58\x62\x27\x45\x9b\xcf\x44\x2e\xe9\x98\x62\xdb\x38\xfc\x2b\x62\xef\xe3\xb1\xe5\x9d\x6a\x89\xd7\xcf\x63\x2e\x4d\x19\xda\x54\x78\x9d\x37\x2c\xfa\x3a\xf1\xfb\x06\xfe\x82\xf8\x1c\xf2\xab\x36\x6f\x0c\xfc\x53\x8c\x0d\xf7\x42\xbe\x37\x8c\x23\x2a\x3f\x38\x87\x2a\x5f\x6e\x45\xe0\x9f\xd4\x72\xcb\x67\xdb\x95\x1e\xf9\x0b\xd4\x1f\x72\x2d\x74\xe0\x2f\xb0\x2f\xd3\xef\x26\xef\x85\xfe\x38\xfc\xb7\x04\x97\xb2\xe7\xda\x31\xc9\xaf\xf2\x71\x57\xd4\x94\x30\xe6\x2d\x8f\x3d\x66\x5e\x44\xe5\x7f\xc3\x58\x7d\x9f\x7f\x4f\x8c\x51\xf2\xcb\xfa\xfa\x44\xc4\xac\x88\x1a\x5f\x88\xc1\x2f\x6d\xd7\xa0\xc5\x96\x7f\x39\x91\x7f\xbe\xe1\xda\xc7\xe5\xdf\xe5\xbc\xad\x68\xf3\x3a\x0c\xfe\xb7\xcc\x37\x99\x5f\x1f\x9a\xdf\xa3\xe9\x39\x0b\x71\x6f\x7b\x1d\xea\x4f\x4e\xbb\xff\xe3\xf0\xcb\xfa\xbb\x64\xa9\x5d\x95\x08\xf5\x77\x41\xb4\xa9\xc4\xe0\x1f\x16\x24\x7f\x92\xcf\xdf\xa4\xd7\x1f\x49\xaf\xbf\x90\xf0\xfa\x33\x43\x86\xc4\xe0\x5b\xb0\xce\xdd\x96\x6b\xbe\xdf\x0a\xcd\x69\xad\xb9\x4e\xcb\x75\x9d\x3f\xea\x57\x9c\x57\xab\x15\xe7\xce\x6a\xd1\x81\xeb\xb6\x6d\xd1\x75\x9d\x55\xd7\x75\x8e\x5d\x57\xc6\x20\xd8\xe3\x18\xb3\xf1\xcc\x71\x5b\x62\x46\xee\x53\x9c\x4b\x76\x4e\x2c\x98\x00\x70\x1e\xc0\x45\xfa\x28\x16\xb6\x55\xb1\x0f\x00\x3c\x02\xf0\x73\x4c\x7b\xc4\xd8\xe7\xec\xaf\x44\x2b\x0b\xd3\x8f\x95\x84\x5d\x64\xec\x53\x00\x1f\x03\xf8\x06\x40\x9d\x9a\xc0\xf3\xf7\x00\x7c\x29\xc6\xaa\x9e\xa9\x9f\x8a\x71\x3f\x15\xf1\xdb\x00\x5e\x31\x2e\x6c\xf7\x37\xfb\x0c\x63\xdf\xb1\xcd\x6c\x87\xf8\x3b\x6c\x57\x17\xf1\xe7\x79\xbe\xc5\x63\xf7\x78\x4c\x8f\x0f\xcf\xbf\xa3\x6f\x09\x7e\xc5\xf9\x1a\xc0\x0e\x63\x4b\x96\xf8\x6d\x6a\x7d\xad\xc5\x97\xa8\x6f\xdb\x32\xfe\x1a\x75\xcd\x8a\xf1\x3e\x10\xf3\x37\xc1\xbe\x6e\x6b\xf1\x3b\xda\xf5\x2b\x19\xae\x95\xed\xfa\xed\x0c\x20\x7f\xfa\xcd\xdf\x44\x11\xec\x6d\x06\xa6\xd0\x38\x05\xd6\x4e\x81\xaf\x0e\x81\xcf\x7f\x05\xae\x1f\x02\x5f\x1c\x02\xdf\x9e\x06\xe7\xf4\x98\x7f\x03\x00\x00\xff\xff\xdd\xcd\xca\x71\xee\x3a\x00\x00")

func staticFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_staticFaviconIco,
		"static/favicon.ico",
	)
}

func staticFaviconIco() (*asset, error) {
	bytes, err := staticFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/favicon.ico", size: 15086, mode: os.FileMode(420), modTime: time.Unix(1502672816, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticGithubCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x3a\x79\x93\xba\x48\x96\xff\xf7\xa7\x60\xab\x63\x62\xfa\xd7\x96\x25\x20\x9e\x15\xfd\x8b\x4d\xbc\x0f\xb4\x2c\x4f\x9c\x9d\x8d\x48\x20\x81\x54\x20\x11\x50\xd4\x8d\xdd\xcf\xbe\x01\x1e\xa5\x02\x6a\xf5\x74\x8c\x7f\x18\x9a\xbc\xf7\xf2\x5d\xf9\xae\xe4\x3f\x55\x62\x79\x69\x15\xca\x88\xfa\x9f\x5f\x28\xea\xf8\xcf\xc4\xc6\xae\x4c\x11\xd9\xc3\x32\xb1\xdc\xb4\x81\xad\xe5\xfb\x2f\x14\xe5\x3a\x72\x99\x5a\x3b\xc6\x6f\x0a\xf4\x60\x39\x80\xcd\xf8\x44\x55\xdf\x65\x1d\x3a\x2e\xf2\xfe\x58\x7b\x6a\xba\xf8\x2e\x41\x17\xe5\xb9\x57\x85\x2e\x35\x3e\x35\xc0\x83\xf0\x33\xf7\x4f\xbf\x2a\xf5\x01\xb8\xff\xe1\x6b\x63\xda\x68\x02\x00\x1a\x30\xfc\xaf\x05\x5f\xad\xf0\xe7\x58\x19\x4d\xc6\xc1\xcf\xb9\x1c\xd2\x0a\x1f\x11\x00\x06\x00\x8c\x18\x61\x23\x04\xff\x77\x01\x7d\xbe\x1d\x3c\x11\xeb\x62\x6d\x9c\xfd\x5c\x48\xd3\xba\x0f\x00\xa8\x86\x48\xb5\x71\x80\x09\x40\x7b\xa4\x6f\xcc\x1e\xab\x54\x82\xc5\xd1\x32\xdc\x39\xdc\xe4\xc0\xdf\xdc\xe2\x2d\x29\xf8\x59\x08\x88\x56\x76\xc1\xe3\xca\x58\x48\x15\x5b\xba\x25\xce\x7a\x01\xbd\xc6\xe8\x12\x89\x27\xa0\xc5\x2a\x2e\x9a\x8a\x00\x80\xba\x1b\x3c\xf9\x38\x88\x2e\xd7\x56\x25\x0f\x36\x26\xfa\x3c\xf8\xef\x86\x4c\xd3\xc1\x57\x4f\xd3\x39\x58\x62\x48\xf0\x2c\xe0\x2f\x64\x85\x27\xc1\xf7\xb2\x02\x8a\xd5\xcf\x86\xee\x29\xcd\x00\xbe\x5b\x0c\x16\xab\xe1\x56\x7e\x03\x80\x8a\x2a\x35\x4a\x0b\x31\xe0\xcf\x05\x67\xfd\x54\x00\x8f\xc1\x88\xf7\xc4\x99\x1e\xf0\x57\x59\x85\xf4\xb4\xa3\x12\x8b\x60\x68\xe6\x74\x69\x1a\xc8\x3f\x0a\x36\xe1\x07\xc1\x23\x63\xb6\x2e\x64\xdd\xbe\xdc\x28\xed\x95\x60\x11\x07\xa8\x00\x05\x5f\x42\x2d\x3b\xb0\xfb\xbc\x2f\x9b\x93\x60\xb1\x26\x05\x8b\xcd\x40\x3e\x3e\x03\xeb\x0d\x7b\x99\x5d\xc0\x91\x98\xdf\xc2\x62\x1b\x34\x84\x69\xa6\x9f\x67\xf9\x2a\xa6\xbd\x76\x57\x1c\x60\x4b\x9e\xd5\x76\xb6\xd8\xc2\x8d\xf6\x62\xa8\x35\x2d\x3c\xc8\xaf\xcd\x91\x3b\xae\xed\xba\x66\x8e\x9f\xe4\x7b\x55\xfe\xa3\x38\xb2\x3d\x37\x5f\xa7\x37\xa9\x65\x86\x86\x16\x8b\x53\xd8\x6b\x56\xfd\xec\x86\x4d\x95\x52\x55\xbe\x33\xda\xbb\xed\x9e\x35\x6d\xf7\x46\x5a\xb3\xb6\xe3\x78\xad\x91\xad\x09\xad\x52\xb5\x52\xab\xf6\x1b\xb5\xd9\xbe\x0a\xaa\xe3\x9c\xce\x77\x84\x96\xd6\xfb\x98\xaf\x48\x35\x3b\xc4\xc6\x04\xce\xe6\x95\xda\x67\x36\xd3\x2a\x00\x6f\x5b\x6b\x77\xbd\xfd\x7e\x3d\x57\x5b\xa9\xc9\x64\x69\x3b\xdb\x91\x31\x1b\xea\xd3\x8e\x94\x1d\xf1\x48\x6e\x30\x8c\xe3\x93\x9e\x61\x9a\x16\xf3\xc1\x4e\x45\xb9\x2d\xef\x8d\x2c\x8b\xbc\xa1\xdd\xb1\xf6\xb8\x52\x30\x06\xbb\x29\x62\x5c\x73\xf2\xb1\xcb\x74\xbd\x42\x47\x4e\xd1\x9b\xa9\x98\xd1\x80\xd6\x6a\xd5\x56\xa0\x57\xf2\x11\x6d\xfb\x9d\x99\x83\xb0\x00\xdd\xed\x06\x4a\xd5\x81\x20\x70\x0e\xee\xa7\x56\x5b\x81\x25\x9a\x5f\x6d\xf4\xe7\xa3\xd9\xd6\xdf\x56\xf1\x4e\x1e\xb4\x64\x22\xd6\xf9\xee\x22\xd7\xc9\xd6\x5a\x70\x28\x7b\x60\xc5\x2e\x47\x22\xf6\x53\x3b\x53\x97\x51\x61\xe3\x0b\xa5\xc5\x70\xd5\x2f\xb6\x77\x13\x25\xf7\xd9\x2c\x69\xbb\x91\xc7\xa6\xda\x99\xdd\xd8\x14\x8d\xd6\x27\xed\xd2\x9c\x95\x4f\x15\x26\x26\x43\xf6\x68\x3f\x46\xdd\x1a\x1c\x2f\x74\x58\x1d\xae\x67\x4d\x7f\xf2\xa9\x6d\xba\x6d\x8b\xf1\x06\x85\x2d\x5e\x4f\x36\x19\x22\x8f\x3e\xeb\x1c\x6b\xf6\xb4\x79\x83\xd7\xc4\x86\xe4\xcf\xfb\x3c\x06\xa0\xde\x68\xf3\x2d\x01\x00\xbc\x07\xf5\xd0\x15\x30\x68\xb4\xc0\xde\x5a\x40\x91\xe5\x97\x62\x03\x00\x0e\x5b\xc5\xbd\x3f\xc3\xa9\x29\x9b\x12\x16\x95\xbd\xd0\xaa\x02\x7b\xe8\x6f\x66\xfb\x4a\xa9\x30\xe7\x5a\x5a\xb1\x97\xe1\xb7\x62\x63\xae\xc9\x9a\x91\x63\xf9\xca\x70\xd0\x01\x20\xbb\xa8\x4c\x8a\x15\x00\x78\x15\x9c\xce\x52\x8d\x3f\xef\xcf\xa9\xd9\x0d\xa8\x0c\xe6\x03\xc0\xb7\x84\x45\x47\x03\xa6\x08\x3a\x35\x8d\x9f\x69\x00\xa0\x9e\xbd\x10\x1b\x62\xde\x1f\x61\x5e\x9b\x4f\x79\x8d\x5d\x9a\xe3\x2d\xa9\x02\x4e\xf8\xd0\x1b\x73\x41\xdc\xf3\x98\x01\xcd\x9d\x36\xe9\x8a\x83\x71\x05\x42\x7f\x55\x05\xdc\x47\x45\xdf\xea\xa6\x9e\x29\xf6\xab\xd5\x9a\xbb\x01\x7e\x53\x13\x3a\x42\xab\x6a\x35\xba\xf4\xb6\xa0\xb5\x07\x15\xe0\x0b\xa0\xad\x70\x42\x18\x01\x9a\xa1\x7c\x9a\xd8\x80\x80\xab\x82\xc6\xa7\x26\x0e\x96\xa0\xb9\x6b\x08\xf5\x62\x4f\x13\x9d\x96\x90\x6d\xb7\x40\x63\x22\x8a\xd5\x51\x0a\xd4\x16\xc0\x5f\x57\xeb\x36\x6f\x82\x52\x47\xa8\xd6\x7c\xa1\xa2\x97\x70\x66\x53\x6c\x16\xdd\x26\x9d\xe1\x94\x81\xcc\x60\x60\x82\x25\xe8\xc2\x71\xa7\xab\x1d\xe8\x8f\xc4\x52\xb7\xea\xb6\xb4\x5a\x4b\xf2\xb4\x55\x73\xfc\x61\x57\x71\x56\xfb\x20\xfc\x64\xf7\x39\x32\x47\x8a\xd2\x37\x57\xa3\xd9\x48\xaf\xcd\x56\x0e\x91\x58\x6d\xc0\xd4\x17\xbe\x5d\xdd\xa8\x7e\x85\x57\x4c\x65\x56\xc9\x81\x49\xa7\xbe\xce\xa2\x9c\xa0\xf6\xea\x6d\xb6\xd4\x19\x0d\x46\x5c\xb1\x2f\x95\x32\xc6\x4a\xf4\xfb\x8d\xf9\x16\x8d\x91\xd1\x63\xc7\xec\x67\x3e\x25\x03\x47\xf3\x2a\x6d\x1b\xae\xa7\x85\xf1\x80\x5f\x59\xf5\xe5\xd8\x5d\x00\x31\xb3\xec\x8f\x19\xf9\x23\x55\x05\xda\x66\xeb\x5b\x8c\xac\xcf\xab\xfe\x58\x52\xf2\x95\x3a\x36\x1b\x33\x7f\xef\xd7\xf3\xde\x87\x54\x6f\xc9\x8b\x9a\x91\xda\x6c\x4c\x21\x23\xed\x00\x57\x44\x79\x6f\xea\x74\x80\x63\x72\xf3\xb6\x51\x91\x14\xd7\xd9\x2e\xdd\x2e\x03\xfc\xa9\x95\xd9\xf1\xc3\x76\xc7\x16\xa5\x55\x11\xcc\x20\x1c\x49\xc5\x50\x5e\xb6\xb8\x00\x7e\xbf\x42\xd3\x73\x87\x47\x83\x5e\x75\xd0\x9f\xf6\x33\x19\x57\xe1\x03\x35\x7f\x62\x71\x2a\x82\x5a\xad\x5b\xf3\x85\x51\x8d\x5b\xef\x49\x6e\xbe\x27\x39\x89\xe5\xb7\x8a\x55\xef\xcb\xa0\xbb\xed\x2d\x40\x5e\x62\xf9\xdd\xc8\xf5\x2b\xc5\x85\xe8\x6b\xf4\xc4\xe8\xad\x49\x65\x34\x05\xc2\xaa\xb7\x17\xf6\x2e\xe9\x30\x4e\x4d\xef\xad\xf8\x5d\x6d\x87\x1c\x2d\xf7\x21\xb4\x0d\x71\x3d\x59\xa3\xda\xa8\x23\x2b\x99\x62\x69\xcd\xdb\x96\xbd\x69\xd5\x26\xc4\x44\xcd\x2e\x11\x5c\x00\x10\xd3\x52\xb8\x53\x3e\xe1\x58\x32\x1d\x8c\xe8\x42\x65\xc0\x8f\x1a\x1b\xba\xcd\xeb\x50\x5b\x16\x9a\x83\x7d\x67\x2b\x43\xd6\x6d\x57\x6a\x8c\x5e\xf5\xb8\x41\x3d\x55\x6a\xf7\x87\xb4\x25\x41\x28\x56\x2b\x03\xd5\xaf\xb4\x0b\x60\x9d\x05\xcd\x45\xaa\xdb\x67\xb2\x75\xc1\x34\xf3\xb2\x51\x28\x14\x73\x9b\x0d\xb2\xe8\x25\xbf\x68\x56\x78\x5d\xb5\xc5\x75\x0f\xe6\x3e\x74\x46\xa6\x11\x3b\x5b\x67\x17\xb5\xcd\xb4\x51\x18\x2b\x1f\xd5\xee\x9c\xeb\x95\x58\xab\x6f\xa6\x6a\xfc\x6c\x0d\xa4\xa6\xd9\x12\x86\x9f\x82\x9b\xe2\xe0\xb8\xa6\x70\x3d\x25\x5b\x69\x56\x8b\x3d\x65\xd3\xef\x8e\x5c\xc0\x36\xba\x45\xa1\xf4\xd1\xaf\x4a\x72\x37\xa5\x57\x0b\x15\x66\x4b\x60\x13\x75\xdb\xc3\x1a\x24\x74\xbd\x36\x65\x38\x79\xb9\xad\xa4\x46\xe3\xe2\x68\xbb\x71\xc5\xfc\x8c\x46\xdd\x0f\xf3\x53\x77\x76\xec\x74\x82\x49\xd7\x5e\x3a\x92\x5d\xe4\xba\xdd\xc1\x47\xa3\x55\x90\xf3\x6e\x1f\x8f\xf7\xf6\xb4\x35\x1d\xe6\x1a\x7b\x63\xa8\x8d\xf7\xfb\x2e\x3f\xc4\xcb\xfe\x47\x7d\xd4\x9f\xad\x8c\x5d\xc1\x59\x6d\xe9\x39\x33\xc8\xf1\xa0\x45\xe6\xfc\xb0\x8e\xf5\x81\x38\xe8\xf7\xf9\x9a\xb2\xac\xf4\xb5\xd9\xa8\xdf\x04\x74\xa1\x09\x1a\x8b\xc6\x14\xb7\x16\xf0\x63\xde\x9b\x32\xd9\x4c\xca\x30\xf3\xc3\x52\x7d\x54\x70\xba\xcd\x7a\x3b\xaf\x0e\xa4\x25\x18\xf5\x1b\xcc\x82\xed\xd7\x85\xb5\xdc\x69\xb7\xdd\x6d\x6b\xa2\x0e\xfa\x9f\x46\xaa\xd4\xde\x29\x30\x3f\x34\x18\x65\x2c\xea\xc3\x8a\xc9\x28\xbb\x8a\xa1\x12\x54\xdd\x20\x6e\x25\x88\x4a\xb7\x26\xa9\xab\xa6\x9a\xed\x67\x80\x52\x5d\x9b\xee\x22\xb4\x97\xd9\xd3\x44\x02\xc0\x7c\x20\x2e\x78\x73\x07\x1a\xe2\x60\x6e\x2a\x7a\xb7\xb8\xef\x2a\xd5\xda\x4e\x01\x9f\x2a\x01\xab\xd6\x31\xfb\x0a\x80\xf7\x41\x07\xf0\x02\xe0\x33\x99\x4c\x90\xe7\x40\xb4\xc4\x38\x56\x1f\x7f\xfc\xf1\x83\x52\x89\x63\x42\xef\xb7\xbf\x07\xb5\xcb\xdf\x7f\xbc\xff\xf2\xbf\xbf\xfc\xf2\x66\x42\x67\xa9\x10\xdf\x4a\x4b\x44\xd9\x85\xa5\x50\xda\x74\xd3\x1e\xda\x7a\x69\x17\xef\x51\x1a\x2a\x8b\xb5\xeb\x95\x29\x86\xa6\xff\x16\x94\x42\x69\x1f\x49\x4b\xec\xdd\x81\x30\xb0\x85\xd2\x3a\xc2\x9a\x1e\x2c\xbe\xe5\x82\x35\x99\x18\xc4\x29\x53\xbf\xb2\x1c\x5b\x62\xd1\xfb\x6d\xc1\x95\x86\xb6\x6d\xa0\xb4\xbb\x73\x3d\x64\xbe\x52\x7c\x50\x77\x09\x50\x1e\x86\xff\xeb\xc4\xf2\x5e\xa9\x97\x21\xd2\x08\xa2\xc6\xad\x97\x57\xaa\x89\x8c\x0d\xf2\xb0\x0c\x5f\x29\xe0\x60\x68\xbc\x52\x2e\xb4\xdc\xb4\x8b\x1c\xac\xbe\x52\x2f\x20\x20\x46\x55\x82\x2d\xa9\x9a\x49\x16\xf8\xe5\x02\x3d\x66\x65\xb8\x33\x25\x62\xbc\x9c\xb9\x0a\xa4\x2a\x53\x4c\xde\xde\x26\x89\xe3\x13\x47\x49\xfb\x0e\xb4\xcb\x94\xe4\x20\xb8\x4c\x07\x0b\x71\xfa\x7c\xb3\x8d\xb4\x1c\x6a\xf5\xa4\x81\x3c\x2c\x64\x0b\xc9\xb0\xcc\x6b\xdc\xb2\x1b\x7e\x6f\xae\x08\xd1\x74\x4e\x96\x73\x49\x84\x50\x2c\x1d\x64\x5d\xf3\xa2\x72\xac\xcc\x24\x91\x70\x4d\x7c\x87\x19\x97\xb9\x22\x75\x32\x6c\x02\x37\x96\x77\x0d\xcd\x16\xf3\x59\x98\x04\xbd\xbc\x82\x55\x0a\x59\xc8\x95\x12\x99\x8c\x65\xd1\x56\xe2\xd7\x0f\xac\xdb\x2e\x3a\x8a\x10\x0f\xe4\x24\x2c\x1f\x2c\x24\xc7\xab\xf6\xf8\xd8\x75\x1e\x3c\x86\xd7\x46\xcc\xb2\x6a\x9e\x4d\x12\x6e\x13\x4f\xca\xf4\xaf\x68\xa0\x6c\x9e\xa5\x13\x15\x24\xad\xaf\x80\xa5\x2c\xa3\xb0\xc5\x24\x60\x8c\xaf\x80\x55\xa8\x4a\xaa\x1c\x38\xbc\x04\xe5\xa5\xe6\x90\xb5\xa5\xa4\x9f\xa3\x24\xb3\xcf\x53\xba\x6f\x61\x99\x2d\x97\x25\xa4\x12\x07\x1d\x29\x5a\x1e\xb2\xbc\x32\xf5\xf2\xdf\xc2\x4b\xa2\x57\x9c\x6d\xf5\xd5\xdc\xf9\xc7\x23\x2c\x11\x43\x79\x7f\xda\x17\x4d\xe3\x4a\x8e\x42\x36\x27\xd3\x6a\x22\xb0\x1e\x6b\x30\x53\x3f\x1e\x82\xf8\xa7\xee\x63\x1e\xef\x9f\x75\x13\x7f\x51\x70\xbd\x9d\x81\xca\x14\xf6\xa0\x81\xe5\xb8\xc8\x9b\x40\x42\x7a\x42\x51\xf7\x29\x28\xb1\x7e\x16\x6b\x70\x55\x45\x48\xa5\x93\xc5\x61\x62\x83\x45\x3c\x29\x5a\x55\x55\x2e\x91\x94\x1c\x7b\x52\x92\x98\x92\x94\x64\x3f\xc0\x37\x0e\x9d\x57\x8b\x6a\x12\x53\x0f\xcc\xa5\x38\x8f\x95\x7d\x3f\x34\x4b\xd7\x51\x24\x57\xcc\xd3\xf9\xe4\x10\xa9\x5d\x01\x97\x72\x25\x05\x26\x32\x27\x13\xe7\xe0\xf1\x61\x7e\x57\x90\x4c\x1c\xe8\x61\x62\x95\xa9\xb5\xa5\x20\x27\x48\x86\xef\xcf\xc5\xaf\xe3\x10\x25\x24\xa6\x60\xd7\x36\xe0\xae\x4c\x61\x2b\x4c\xa7\x92\x41\xe4\x70\xb0\xb2\x41\x4e\x90\xc7\x8d\x34\x34\xb0\x66\x95\x0f\xbb\x7a\xc4\x0e\x73\x31\x36\x8c\x32\x25\xaf\x1d\x07\x59\x5e\x98\xcd\xe3\xf6\x39\x68\x22\x6a\x04\xcf\x81\x96\x6b\xc3\x00\x37\x52\xb6\x7c\x89\x95\x76\x97\xd8\x2e\x53\x44\x5a\x20\xd9\x73\x63\xe9\x97\xa1\xec\xe1\x4d\x34\xaa\xc3\xb2\x4e\x36\xe8\x60\x4a\xb2\xf6\x42\xb9\x7c\xac\x78\x7a\x99\x8a\x75\x6d\xd7\x73\x88\xa5\x45\x2d\x8f\x2d\x1d\x39\xd8\xfb\x0e\x4a\xe0\x2c\x28\x56\x1b\x3a\x73\x11\x0a\xc2\x32\x86\x45\x66\x20\xbf\x09\x1d\x0d\x5b\x65\x8a\x7e\xcb\x17\x90\x19\xcf\x21\x36\x0f\x7b\x49\xc4\x51\x90\x73\x0a\x25\x16\xb1\x62\x0f\xbd\xbb\xd1\xca\x16\xf1\x7e\x2b\x3b\x84\x78\x3f\x0e\x6a\xd8\x20\x47\x35\x88\x5f\xa6\x74\xac\x28\xc8\x8a\x43\x93\x89\x12\xd5\xe5\x52\x52\x22\x6b\xb6\x13\x33\x99\x33\x89\x45\x5c\x1b\xca\xe8\xf5\xeb\xe7\x6d\xdd\x16\x08\x1c\xa3\x19\xe7\x28\xdb\x36\x80\xc3\x96\x56\x3e\xa5\x92\xb4\x44\xc2\x42\xef\x54\xe3\xd1\xef\x57\xa2\x6c\xb0\x8b\x25\x23\x56\x05\xd8\xb2\xd7\xde\x99\xc9\x0b\x53\x5e\xe8\xfb\x3e\xde\x53\xdb\xfc\xc3\xdb\xd9\xe8\x8f\x17\x59\x47\xf2\x52\x22\xdb\x97\x7f\x46\x24\x39\x5a\xec\x28\x88\x0d\x15\x25\x5c\x8e\xdd\xfc\xf7\xbb\xd8\x8f\x84\x3c\x5b\xe2\x42\xd6\x0b\xe5\x5f\xac\x5e\xd5\xcd\x77\x9c\xfc\xb6\x20\xca\xe7\x95\xfc\x7b\x5c\x00\x4a\x72\xc4\xcb\x83\x78\x2f\x6a\x3d\x7f\xbe\xf2\x74\xac\xe6\x8e\x2e\x74\xe5\x27\x27\x3b\x33\x39\x7b\x7b\xeb\x39\xa7\x43\x70\x19\x9e\x22\x81\xe9\xa0\xfc\x23\xb5\xb3\x25\x3c\x8f\x98\x65\x8a\xb1\xb7\x94\x4b\x0c\xac\x50\xbf\x2a\x2a\x62\x51\x6c\xd4\xd6\x9d\xab\xfa\xe8\x1c\x6a\x3d\x18\xba\xd3\x65\xc5\x14\x5b\x2f\x05\xf8\x50\xf5\x8e\x0a\x8c\x41\x37\x10\x74\x02\x27\xf1\xf4\x27\xa8\x85\x68\x57\x51\xc4\x86\xf2\xc9\x19\xcf\x8b\x32\x31\x0c\x68\xbb\x28\x38\x83\x87\x5f\xb1\xb4\xa2\x41\xc1\xd3\x43\xda\xf7\x3d\x5c\x8f\xd6\xf5\x3a\x1b\x5d\xca\x46\x97\xb8\xe8\x52\x2e\xba\x94\x0f\x79\x38\x58\x3e\x48\x56\x57\xae\x70\x36\x5e\x02\x6b\xb7\xf1\x39\xcb\x1e\xda\xcc\xa7\x1c\x90\x8d\x44\x77\xee\x1b\xd8\xd9\x08\x36\xfd\x0d\x6c\xee\x16\xfb\xd4\x20\x3f\x85\x9d\x8b\x60\x7f\x87\xf3\x7c\x04\xfb\x1b\x5a\xb3\x9f\x32\x17\x13\xea\x22\x8a\x1d\x96\x2a\xab\x35\xf1\xd0\x05\x99\x04\xeb\xae\x8d\x88\xb3\x10\xe3\xd2\x61\xd3\x06\x52\xaf\x23\xc7\x37\xfd\x87\x18\x14\x89\x6e\xb2\x36\x4e\xfb\x18\xd8\x3d\xf6\x00\xe9\x20\x69\x94\x29\x83\xf8\xc8\x49\x3b\xc4\x84\xb1\xd9\x78\x6d\x1c\x90\x13\x48\xc6\x3c\x20\x49\x18\xe4\x88\x71\x8f\x0f\x68\xd8\x7a\x6c\x89\xad\x28\x97\x46\x3a\x6b\x29\xbe\x7c\x88\x26\xa3\x97\x61\x5d\x20\x16\x49\x7f\x22\x6d\x6d\x40\xe7\xe5\x95\xaa\x10\xcb\x25\x06\x74\x5f\xa9\x97\x2e\x96\xd0\x21\x1d\x50\x01\xd0\xcb\x2b\x25\x20\xcb\x20\x01\xcc\xda\xc1\xc8\xb9\x53\x4a\xb0\xf1\x3e\x71\x2a\x4d\x9e\x30\xe1\xa9\x34\x08\x48\xfd\x85\x6c\x3e\xa8\xb7\x63\xcb\xea\x03\x57\x49\x85\x3f\x1d\xe7\xa7\xd4\x7f\x60\xd3\x26\x8e\x07\xad\xd8\xd4\x1d\xe0\x31\x31\x78\x9c\xbd\x7d\x02\x93\x8d\xc1\x2c\x3e\x85\x99\x8d\xc1\x0c\xa2\xd1\x13\xa8\x5c\x0c\x2a\xfb\x1c\xbf\xb9\x18\xd4\x20\x7a\x3f\x81\x9a\x8f\x53\x12\xfd\x08\xf5\x5f\xca\xeb\x7f\x61\x52\xff\xf9\x7b\x59\xc5\x8e\xeb\xa5\x65\x1d\x1b\x4a\xd4\xf3\xef\x4b\xf1\xf3\xf7\xb2\x01\xe3\x90\xcf\xa7\xe4\x81\x02\x61\xd8\x66\xfc\x43\x77\x90\xfa\xcf\x1f\x97\xc5\xe2\x45\xb1\xf9\x74\xb1\xf8\x06\x2d\x59\x27\xc7\x06\xdc\x20\xd0\x2b\x53\x81\x39\x2e\xca\xe6\xb4\x73\xc8\x26\xc7\xfc\x74\x15\x92\xd2\xa7\x8c\x79\x3d\x14\xbe\xb3\x51\x59\x25\xf2\xda\xbd\x6c\x12\x93\x79\xb3\x23\x31\xf5\x2b\xf9\xc4\x04\xe8\x98\x08\x1c\x59\x52\xa2\x4b\xa1\x0f\x24\x76\x5b\x0f\xd3\x64\x3e\x3e\x24\xde\xd6\xc6\x6f\x6c\xee\xd0\x78\x5e\x96\x6a\x5f\xe9\x33\x3c\x72\x74\xc2\xf8\x04\x31\x88\x43\xc5\x9b\xe2\xf8\x61\x66\xfe\xda\xe8\xd0\x02\x46\x47\xee\xe7\xf2\xf3\x18\xdd\x42\x1e\x1f\x17\xd8\x5f\xfb\xfc\xbc\x7f\x0e\x1e\x21\x3f\x38\x06\x71\xe8\x4b\x49\xb9\x3f\x40\x39\x4b\x9d\xb5\xb7\x54\xee\xa2\x28\x3a\x66\x30\x26\xce\x5f\x8f\x4e\x7c\xd2\x0f\xc7\x71\x4a\x2e\x1f\x37\x8e\x31\xb1\xa2\x1c\x02\x46\xdc\xc0\xec\x6b\xa6\x7b\x34\xd3\x41\x95\x41\xd7\xf2\xab\x9c\x97\x25\x85\x89\xf4\x34\xe9\xdb\x29\xd4\xf9\xb9\x03\x15\xbc\x76\x43\x39\xde\x4f\xfd\xa9\x0e\x95\xa0\x8f\xc2\x96\x8b\x3c\x8a\xa6\xd2\x01\x65\xfa\xde\x04\xeb\xdf\x5f\xf9\xb3\xd7\x61\xe2\xfa\x98\xc4\xd5\xa7\x91\x0b\x25\x36\x41\x92\x73\x46\x0f\xdf\x42\x8a\x91\xeb\x11\x40\xf6\x11\x00\xf7\x08\x20\xf7\x08\x20\x7f\x0d\x70\xd5\xc9\x33\x12\xa3\xb2\xd9\xfb\x5e\x15\x0e\x3d\xb0\x81\xbd\xdd\xbd\x91\x91\xce\x1c\x3b\xfc\x63\x4c\x8d\xd1\xc5\x23\x80\xec\x23\x00\xee\x11\x40\xee\x11\x40\xfe\x1a\x20\x7e\x1c\x91\x14\xfa\x6f\x45\x7c\x68\xfc\xef\x81\x67\xbf\x07\xce\x7d\x0f\x3c\xf7\x3d\xf0\x5b\x45\x45\x5d\xe8\xd2\x2d\xee\xcc\xc5\xf4\xeb\xda\xf3\x1c\x48\xdf\xb2\x87\xf8\x1f\x9d\x82\x26\xcf\x57\x10\x44\x32\x8a\xbd\xd8\xd1\xd9\xa7\x77\x61\xde\x72\xff\xc2\x3e\x91\xf6\x9c\x39\x26\xd1\xa7\x9a\xf1\x04\xc0\x48\xdf\x4d\xbf\x15\x0b\x49\x54\x23\x6d\x36\xfd\x56\xcc\xc5\xe7\xd2\x3f\xdf\xfc\xb2\xf1\x9b\x87\x9d\x68\x7c\x1b\x1a\xdf\x6a\x26\x74\xa6\x7f\x7a\x34\x63\xe0\x9f\xd1\x49\x41\x52\xb9\x63\xe0\x94\x81\xa3\x7b\x25\x1a\x4c\x31\x9e\x98\x5b\x29\x06\xa5\x78\x11\xb8\x38\x86\xa2\xa6\x4f\xba\xfe\x7b\x66\x40\x12\xec\xab\x44\x6a\xa8\xfc\x9d\xc4\x76\x6f\xee\x77\x2e\x55\xce\x35\xca\xf1\x56\xe4\xf4\x7e\xc8\xd7\x80\x14\xae\x3d\x92\x4c\xec\x38\xeb\x7b\x46\x82\x13\x42\x7c\xb1\x4b\x79\x37\xd2\x05\xad\x22\x73\x2e\x34\x0e\xb5\xcb\x53\xb3\xd6\x23\x39\x27\xe1\xce\xe9\x57\x55\x55\x2f\x8e\xff\xc1\x60\x5f\x74\x4f\x35\x51\x32\xdd\xb2\xe5\xe9\x87\x0a\xf1\x37\xd6\xfa\x91\xb8\xcb\xf1\xee\x31\xf9\x06\xc7\x84\xdb\xf4\x8d\xd6\xef\x5c\x7c\x24\x09\x72\x67\xfa\x72\xed\xa0\xa7\x03\x7e\x3a\x04\x57\x95\xff\x45\xc4\xbc\xbd\x8b\xba\x71\xe4\x62\xee\x6f\xf1\xec\x38\x9a\x04\x7f\x63\x0b\xaf\x59\xe6\x35\x9b\x7b\xa5\xdf\xe8\xdc\x8f\xa4\xca\x31\x9e\xe7\x53\x27\x1d\xf1\x8f\xc3\xc3\xaf\x4e\xd9\x40\x9e\x77\x39\xb4\x4e\x9f\x99\xfe\x6a\x91\xff\x8b\xa6\x21\x1d\x3b\xfc\x3e\x35\x51\x17\xaf\x07\x59\xc4\x31\xa1\x91\x00\xfc\x33\x41\x9f\x49\x0a\x3a\xd9\x32\xa4\x1f\xbe\x78\xf4\xb5\x01\x45\xf9\x3a\xf6\x50\xc8\x3a\x2a\x07\xd4\x9f\xbf\x78\x88\xe9\x5e\x75\xac\xe9\x46\x70\xe6\xe2\x5a\x95\xa4\x20\x70\x81\x75\xd3\x4f\x5e\x4d\xc4\xe2\xd8\x7f\x44\x2c\xb1\x61\x3d\x6b\xee\x14\xb0\x6e\xc3\x4b\x9c\x8b\xdd\x94\xe0\x5c\x2e\xe9\x18\x7c\xdd\xf2\x3f\xe5\x6b\x01\x53\x67\x9b\xde\xf4\x6c\xef\xd7\xe7\xf2\xc4\xdc\x1d\xcb\xc7\x5c\x0e\x26\x5d\xab\xc5\xfa\xdc\x13\xd7\xe2\x77\x9d\xe0\x24\x4d\xe2\xe9\xf9\x02\xf8\x3a\x41\xe7\x73\x72\xc7\xb2\xea\xda\x30\xd2\x32\x31\x4d\xec\x51\x6f\x92\x67\xa5\x4f\xa3\x91\xf0\x3e\x59\xc1\x6e\x10\x0e\x95\x1f\x17\xf7\x7a\xb7\x6f\x56\x5c\xde\x24\x3d\x78\xe5\xe2\x4f\xb7\xd0\x87\xee\xf9\x2f\x9d\x2d\xff\xdb\xdb\x70\x85\x51\x72\x0a\x4c\x6e\xc3\x23\x6d\xfa\x37\xda\xf0\xe4\x74\x56\x0e\xaf\xaa\x91\x92\x7a\x0b\xc8\x91\xb4\x01\x25\x74\x2c\x80\x88\x8b\x0f\x9d\x90\x83\x0c\xe8\xe1\x4d\x28\xd5\x3e\x8d\x2d\x05\x6d\xc3\x49\x5a\xd4\xb2\xc7\x1b\xe1\x18\x3f\x72\x90\x4d\xd2\x32\xb1\x54\xac\xa5\x89\x1d\xd2\x0d\x3d\xe8\xb8\xfd\x0f\xea\xff\xa8\x37\x0f\x9b\x28\xed\x20\x13\x62\x0b\x1f\xef\x7a\xcf\x9e\x90\x38\x24\xf4\xa0\xbb\x4c\x87\x77\x18\xd8\x43\x66\xfc\x8d\xc6\x93\xc8\xa9\x38\x62\x97\x15\x5d\x42\x28\xb9\x45\xfb\xba\x86\x3f\xc7\x88\x43\x46\x3d\xcd\xb1\xd2\xcc\x5b\xfe\x90\xaa\x92\xdc\xe7\xce\x4b\x11\x71\xbe\x81\x50\x88\xf3\xff\x01\x00\x00\xff\xff\x5f\x1c\xc9\xc0\x29\x35\x00\x00")

func staticGithubCssBytes() ([]byte, error) {
	return bindataRead(
		_staticGithubCss,
		"static/github.css",
	)
}

func staticGithubCss() (*asset, error) {
	bytes, err := staticGithubCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/github.css", size: 13609, mode: os.FileMode(420), modTime: time.Unix(1503156749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\x4d\x6f\xd4\x30\x10\xbd\xe7\x57\x0c\x73\x02\x89\x24\xdb\x8a\x52\x58\xec\x80\x04\x9c\xe1\xc0\x85\xa3\x63\x4f\x37\x43\x1d\x3b\xb2\xa7\xfb\xc1\x6a\xff\x3b\xca\x47\xcb\x2e\xa8\xb9\x58\x33\x6f\xde\x7b\xf3\x11\xf5\xe2\xcb\xb7\xcf\x3f\x7e\x7e\xff\x0a\x9d\xf4\xbe\x29\xd4\xf8\x80\x37\x61\xa3\x91\x02\x36\x45\xa1\x3a\x32\xae\x29\x00\x00\x54\x4f\x62\x20\x98\x9e\x34\x6e\x99\x76\x43\x4c\x82\x60\x63\x10\x0a\xa2\x71\xc7\x4e\x3a\xed\x68\xcb\x96\xca\x29\x78\x0d\x1c\x58\xd8\xf8\x32\x5b\xe3\x49\x5f\xe1\x22\x24\x2c\x9e\x9a\xe3\x11\xaa\xc1\x48\x07\xa7\x93\xaa\xe7\xd4\x0c\x7b\x0e\xf7\x90\xc8\x6b\x64\x1b\x03\x42\x97\xe8\x4e\x63\x7d\x67\xb6\x63\x5c\xb1\x8d\x1f\xb7\xfa\x1a\xa1\xfe\xaf\x3e\xcb\xc1\x53\xee\x88\xe4\x89\xb5\x61\xe9\x1e\xda\xca\xe6\x3c\x11\x54\x3d\x0f\x54\xa8\xa9\x76\x56\xa8\x7a\x93\xee\x5d\xdc\x85\xb2\x8d\xee\x00\xc7\x29\x39\x7e\x6d\xdc\x97\x99\x7f\x73\xd8\xac\xa1\x8d\xc9\x51\x2a\xdb\xb8\xff\xf0\x84\xf7\x1c\xe6\x51\xd7\x70\xbd\x5a\x0d\xe7\x88\xd9\x3f\x22\xef\xdf\xfd\x83\xa4\x0d\x87\x35\xac\xc0\x3c\x48\xfc\x9b\x1f\x8c\x73\x93\xd1\x9b\x9b\xc7\xf2\x53\x31\x3d\x9f\x7a\x72\x6c\xe0\xe5\x99\xe6\xed\xdb\xdb\x61\xff\xea\xac\xd3\x67\x47\xb8\x90\xbe\xba\x39\xef\xe4\xb4\x98\xa8\x7a\xd9\x45\xa1\x46\xf2\xb2\x55\x93\x84\xad\x27\x60\xa7\x71\x48\x34\x5e\x1c\xc1\x7a\x93\xb3\xc6\x0b\x33\x04\x39\x0c\xa4\xa7\x3f\x48\xd5\x0b\x6d\x11\xc9\x36\xf1\x20\x90\x93\xd5\x58\x2f\x2a\xd5\xaf\x8c\x8d\xaa\x67\x68\xbc\xc8\x6c\x3a\x9e\x66\x94\xf8\x13\x00\x00\xff\xff\x60\x02\x6c\xd3\x94\x02\x00\x00")

func staticIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticIndexHtml,
		"static/index.html",
	)
}

func staticIndexHtml() (*asset, error) {
	bytes, err := staticIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/index.html", size: 660, mode: os.FileMode(420), modTime: time.Unix(1503156831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticPreviewJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x41\x4b\x33\x31\x10\x86\xef\xfd\x15\x2f\xbd\xec\x2e\x85\xf4\xfe\x95\x5c\x3e\x11\x14\xf4\xa4\xe0\x39\x26\x63\xbb\x98\x9d\x29\xc9\xec\x46\x91\xfe\x77\xc9\xba\xb5\x1e\x3c\x98\x53\x48\x9e\xf7\x99\x79\xdb\x97\x91\xbd\xf6\xc2\x68\x3b\x7c\xac\x00\x60\x72\x09\x63\x8a\xb0\x68\x4a\xfe\xb7\xdd\x36\xd8\xa0\xf4\x1c\xa4\x98\x28\xde\x55\xd8\x1c\x24\xeb\x2f\xcf\x47\xa7\x07\x76\x03\x61\x53\xb3\xcd\xee\xdb\x77\x4c\x34\xf5\x54\x60\x11\xc4\x8f\x03\xb1\x9a\x3d\xe9\x75\xa4\x7a\xfd\xff\x7e\x1b\xda\xf5\x82\xac\xbb\x4b\xca\x0b\x33\x2c\x98\x0a\x9e\xe8\xf9\x41\xfc\x2b\x69\x3b\xa6\xd8\xed\x56\x33\x53\xff\x8d\xb0\x8f\x92\x09\x16\x97\x2a\x34\x11\xeb\xb9\x4f\x3d\x8b\xdc\x28\xbd\xe9\x95\xb0\x12\x6b\xed\x57\x05\xf4\x95\x99\x25\x61\x59\xf9\xf4\x53\x3f\x50\xce\x6e\xff\xc7\x01\x3d\x33\xa5\x9b\xc7\xfb\x3b\x58\xcc\x90\x09\x4e\xdd\xd9\x7a\xea\xda\xee\x33\x00\x00\xff\xff\xe4\x18\x5f\x51\x72\x01\x00\x00")

func staticPreviewJsBytes() ([]byte, error) {
	return bindataRead(
		_staticPreviewJs,
		"static/preview.js",
	)
}

func staticPreviewJs() (*asset, error) {
	bytes, err := staticPreviewJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/preview.js", size: 370, mode: os.FileMode(420), modTime: time.Unix(1502658362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/favicon.ico": staticFaviconIco,
	"static/github.css":  staticGithubCss,
	"static/index.html":  staticIndexHtml,
	"static/preview.js":  staticPreviewJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"favicon.ico": &bintree{staticFaviconIco, map[string]*bintree{}},
		"github.css":  &bintree{staticGithubCss, map[string]*bintree{}},
		"index.html":  &bintree{staticIndexHtml, map[string]*bintree{}},
		"preview.js":  &bintree{staticPreviewJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
